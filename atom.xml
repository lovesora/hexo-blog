<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lovesora&#39;s blog</title>
  <icon>https://www.gravatar.com/avatar/25d5812b9abe72093a63b491a7d33524</icon>
  <subtitle>( ´ ▽ ` )ﾉ`)</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="blog.lovesora.pro/"/>
  <updated>2020-03-23T23:07:27.943Z</updated>
  <id>blog.lovesora.pro/</id>
  
  <author>
    <name>Sora Liu</name>
    <email>475212506@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>过去半年，我做了什么，未来半年的计划</title>
    <link href="blog.lovesora.pro/2020/03/24/work/summary/2020.03/"/>
    <id>blog.lovesora.pro/2020/03/24/work/summary/2020.03/</id>
    <published>2020-03-24T06:18:19.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="离开了上一家公司"><a href="#离开了上一家公司" class="headerlink" title="离开了上一家公司"></a>离开了上一家公司</h2><p>  19年中，我离开了待了2年的一家创业公司，对于这家公司我的感情很深，最开始我只是一个前端的业务开发，那个时候人很少，只有一个前辈，加上我一共也才两个人，后来业务发展得比较快，又招了一个同事，我们三个人就开始努力地写业务，也没有leader什么的，当时部门的领导想让我们三个人中的某一个自己“冒”出来当leader😓，但业务实在太多了，我们根本就没有多余的时间来考虑这些（当时自己也是挺单纯的，没有什么杂七杂八的想法，只是一心想提升自己的技术），后来公司战略有所调整，从B端往C端开始发展，开始做小程序，于是开始了分业务线（大厂里应该叫事业部），又开始了新一轮扩张，当时招人很难，不是由HR筛选简历，而是让我直接在BOSS上自己联系😂，本来业务就多，哪来那么多时间呀，招聘这件事情就比较拖沓，从18年中到年底一共也才招了6个同事，而我也渐渐地开始脱离了业务，最开始的三人组中我成了前端leader，另外两个同事分别带2-4个人处理业务，其实很怀念当时的情景，和后端的同学感情也非常好，中午大家一起吃饭，晚上一起回家（有2个同事和我住同一个小区），周末偶尔一起出去玩，有时候还约一起玩游戏，想想感情真的好，就像大学同学一样，大家有啥就说啥，哈哈哈，坐的地方也挨着一起，随时扯皮。</p><p>  19年初，我渐渐有了换一份工作的想法，部分原因是个人发展，感觉自己前进的步伐迈得愈发困难，还有一部分原因是感觉研发<br> 、产品、测试之间的关系越来越矛盾，公司不大但内部消耗却有点严重，渐渐没有了那种做好事的感觉，大家一心想的是如何保证自己的舒适区，如何提高自己的话语权，就这么点人我也是醉了，哪来那么多弯弯绕绕呢。各方面原因吧，开始了自己人生中下一份工作。中间还有很多有意思的事情，我开个单章慢慢道来。</p><h2 id="开始接触Devops"><a href="#开始接触Devops" class="headerlink" title="开始接触Devops"></a>开始接触Devops</h2><p>  新公司也是一家创业公司，刚开始我也只是做业务，这里我得感谢一下在做业务的时候我的manager，亦师亦友，帮我争取了很多机会，差不多1个月左右我被拉去了infra team，开始了devops的旅程，我从infra team的manager身上学到了很多东西，他年长我几年，但是他的经历非常丰富，印象最深的就是他对待技术的态度，从不拖沓，想到就做，动不动就硬核改源码，当时我惊呆了，怎么会有这么吊的人，知识面很广，并且非常敢于表达自己的想法（这点我感觉自己差很多，总有点畏首畏尾），技术深度也有，以前我的想法是只要能用即可，但为什么却思考比较少，让我想起了高中学数学，总喜欢问为什么，所以成绩才好，毕业了出来工作了，反而缺失了<strong>追寻事物本质</strong>的态度，这点需要我自己反思。</p><h2 id="开始完善方法论"><a href="#开始完善方法论" class="headerlink" title="开始完善方法论"></a>开始完善方法论</h2><p>  我觉得做事情需要有方法和技巧。</p><ul><li>方法 -&gt; 如何高效并且最大化价值地完成一件事</li><li>技巧 -&gt; 如何让过程变得简单，可执行，可预期</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>行动之前先想好过程（步骤）</li><li>执行jie duan</li></ul><h2 id="未来的计划"><a href="#未来的计划" class="headerlink" title="未来的计划"></a>未来的计划</h2><h3 id="把自己的人生看成是-编程"><a href="#把自己的人生看成是-编程" class="headerlink" title="把自己的人生看成是 编程"></a>把自己的人生看成是 <code>编程</code></h3><h3 id="现在需要完善的知识"><a href="#现在需要完善的知识" class="headerlink" title="现在需要完善的知识"></a>现在需要完善的知识</h3><h2 id="人生目标"><a href="#人生目标" class="headerlink" title="人生目标"></a>人生目标</h2><h3 id="活成自己，而非他人"><a href="#活成自己，而非他人" class="headerlink" title="活成自己，而非他人"></a>活成自己，而非他人</h3><h3 id="自律"><a href="#自律" class="headerlink" title="自律"></a>自律</h3><h3 id="让自己变得高效"><a href="#让自己变得高效" class="headerlink" title="让自己变得高效"></a>让自己变得高效</h3><h3 id="提升自己的执行力"><a href="#提升自己的执行力" class="headerlink" title="提升自己的执行力"></a>提升自己的执行力</h3><!--stackedit_data:eyJoaXN0b3J5IjpbMjA4NzMzMTY2NF19-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;离开了上一家公司&quot;&gt;&lt;a href=&quot;#离开了上一家公司&quot; class=&quot;headerlink&quot; title=&quot;离开了上一家公司&quot;&gt;&lt;/a&gt;离开了上一家公司&lt;/h2&gt;&lt;p&gt;  19年中，我离开了待了2年的一家创业公司，对于这家公司我的感情很深，最开始我只是一个前端
      
    
    </summary>
    
    
    
      <category term="summary" scheme="blog.lovesora.pro/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>The deps manager of go lang</title>
    <link href="blog.lovesora.pro/2019/12/27/go/dep/"/>
    <id>blog.lovesora.pro/2019/12/27/go/dep/</id>
    <published>2019-12-27T17:20:09.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="go-mod"><a href="#go-mod" class="headerlink" title="go mod"></a>go mod</h2><p><a href="https://github.com/golang/go/wiki/Modules" target="_blank" rel="noopener">Go Modules</a> have recently been released and announced as the official Go dependency management tool. A lot of Go 3rd libraries are being migrated to use Go Modules and require dependent projects to use Go Modules as well. Therefore, Go Dep is going to be deprecated soon. We will swap Dep for Go Modules in the project we previously started</p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>Allow and recommend projects to be located outside of  <code>$GOPATH</code>.</li><li>Dependencies are put into a  <code>vendor</code>  directory (same as  <code>go-dep</code>), so that different projects can depend on different versions of the same packages.</li><li>Automatically detect import statements and then update dependencies graph, lock, download, and install appropriate versions of packages.</li><li>Automatically check for dependencies when  <code>build</code>,  <code>run</code>, or  <code>test</code>.</li><li>Allow specifying, downgrading, and upgrading versions of packages.</li><li>Automatically generate a dependency lock to ensure reproducible builds.</li><li>Semantic versioning mechanism.</li><li>The official recommendation for dependencies and applied in the Go ecosystem.</li></ul><!--stackedit_data:eyJoaXN0b3J5IjpbLTE1NDU0OTI3OCwtMTU3MjIzNjU2OF19-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;go-mod&quot;&gt;&lt;a href=&quot;#go-mod&quot; class=&quot;headerlink&quot; title=&quot;go mod&quot;&gt;&lt;/a&gt;go mod&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/golang/go/wiki/Modules&quot; ta
      
    
    </summary>
    
    
    
      <category term="go" scheme="blog.lovesora.pro/tags/go/"/>
    
      <category term="dep" scheme="blog.lovesora.pro/tags/dep/"/>
    
  </entry>
  
  <entry>
    <title>Shell Common Commands</title>
    <link href="blog.lovesora.pro/2019/12/17/shell/commands/"/>
    <id>blog.lovesora.pro/2019/12/17/shell/commands/</id>
    <published>2019-12-17T11:12:49.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Traverse"><a href="#Traverse" class="headerlink" title="Traverse"></a>Traverse</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># read lines from file</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span> &lt; /path/to/file</span><br></pre></td></tr></table></figure><h2 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show Mounted Hard Drives Partition</span></span><br><span class="line">df -aTh</span><br></pre></td></tr></table></figure><h2 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># parallel run task</span></span><br><span class="line">wget url1 &amp;</span><br><span class="line">wget url2 &amp;</span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calc command time</span></span><br><span class="line">time cp a_large_file .</span><br></pre></td></tr></table></figure><h2 id="Compress"><a href="#Compress" class="headerlink" title="Compress"></a>Compress</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar zip</span></span><br><span class="line">tar -czf /path/to/archive.zip /src/to/be/zipped</span><br><span class="line"></span><br><span class="line"><span class="comment"># tar unzip</span></span><br><span class="line"><span class="comment"># notice: This will be extracted to /src/to/be/zipped</span></span><br><span class="line"><span class="comment"># not /zipped</span></span><br><span class="line">tar -xzf /path/to/archive.zip -C /</span><br></pre></td></tr></table></figure><h2 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check whether the site is healthy</span></span><br><span class="line">curl -<span class="keyword">if</span> https://xxx.xx/health-check</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl: (48) An unknown option was passed in to libcurl</span></span><br><span class="line">apk add curl-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># how to test gateway</span></span><br><span class="line">kubectl -n istio-system port-forward svc/istio-ingressgateway 3000:80</span><br><span class="line">curl -H <span class="string">"Host: www.xxx.com"</span> http://localhost:3000</span><br></pre></td></tr></table></figure><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># base</span></span><br><span class="line"><span class="comment"># echo $&#123;str:start-index&#125; or echo $&#123;str:start-index:length&#125;</span></span><br><span class="line">str=<span class="string">'12345'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str:2&#125;</span> <span class="comment"># 345</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str:2:1&#125;</span> <span class="comment"># 3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str: -2&#125;</span> <span class="comment"># 45(there is a space beteew ':' and '-')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cut</span></span><br><span class="line">  <span class="comment"># get Add and Modified files</span></span><br><span class="line">git diff-tree --no-commit-id --name-status -r HEAD | grep <span class="string">'^[AM]'</span> | cut -f 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># rm last substring</span></span><br><span class="line">filename=path-to-test-dev</span><br><span class="line">str=$(<span class="built_in">echo</span> <span class="variable">$&#123;filename%-*&#125;</span>)</span><br><span class="line"><span class="comment"># path-to-test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># regex</span></span><br><span class="line">[[ <span class="string">"1234"</span> =~ ^12 ]] &amp;&amp; <span class="built_in">echo</span> y</span><br><span class="line"></span><br><span class="line"><span class="comment"># trim</span></span><br><span class="line"><span class="function"><span class="title">trim</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> var=<span class="string">"$*"</span></span><br><span class="line">    var=<span class="string">"<span class="variable">$&#123;var#"$&#123;var%%[![:space:]]*&#125;</span>"</span>&#125;<span class="string">"</span></span><br><span class="line"><span class="string">    var="</span><span class="variable">$&#123;var%"$&#123;var##*[![:space:]]&#125;</span><span class="string">"&#125;"</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">"<span class="variable">$var</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 123 1221</span></span><br><span class="line">trim <span class="string">' 123 1221  '</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># keep str format</span></span><br><span class="line">cat &lt;&lt;- EOF</span><br><span class="line">w1w1wasdfc</span><br><span class="line">...str</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get json value</span></span><br><span class="line">JSON=<span class="string">'[&#123;"a": "line\nnewline"&#125;, &#123;"a": "line1\nnewline"&#125;]'</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$line</span> | base64 --decode</span><br><span class="line"><span class="keyword">done</span> &lt; &lt;(<span class="built_in">echo</span> <span class="variable">$JSON</span> | jq -r <span class="string">".[].a | @base64"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># convert string to JSON</span></span><br><span class="line">jq -aRs . &lt;&lt;&lt; <span class="string">'line</span></span><br><span class="line"><span class="string">newline'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use variable as JSON string</span></span><br><span class="line">JSON_STRING=<span class="string">'&#123;"bucketname":"'</span><span class="string">"<span class="variable">$BUCKET_NAME</span>"</span><span class="string">'","objectname":"'</span><span class="string">"<span class="variable">$OBJECT_NAME</span>"</span><span class="string">'","targetlocation":"'</span><span class="string">"<span class="variable">$TARGET_LOCATION</span>"</span><span class="string">'"&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -D <span class="string">"2019-12-11T07:25:34Z"</span> <span class="string">"+%Y-%m-%d %H:%M:%S"</span></span><br></pre></td></tr></table></figure><h2 id="Process-Subsititution"><a href="#Process-Subsititution" class="headerlink" title="Process Subsititution"></a>Process Subsititution</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grammar</span></span><br><span class="line"><span class="comment"># &lt;(command) 或 &gt;(command)</span></span><br><span class="line">cat &lt;(ls)</span><br><span class="line">ls &gt; &gt;(cat)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r line; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$line</span>"</span></span><br><span class="line"><span class="keyword">done</span> &lt; &lt;(ls)</span><br></pre></td></tr></table></figure><!--stackedit_data:eyJoaXN0b3J5IjpbLTk1OTczNjc2MSwxMDkwNzU5NDAzLC0xNzgxNDA0MTM1LDk4MjM4OTY2OSwtMTk3ODYwNDk4Nyw1NzA4NDE5OTQsLTI0NjgwNjA4MCwtMjE1NzM2MTQ1LDg2Njg1ODU1MCwxNzIxODAxOTYyLC0xMTY5OTYxMzkwLC0xMDQ2OTEzMzM5LC04MzE2MDQyNzEsMTk2Njk3MDU5NSwtMTMzODk5ODcwNSwtMTkyNjkwMzM2OCwtMzM2MDcxMiwyMTI2MjUwMzc3LDM1OTI4MzkwM119-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Traverse&quot;&gt;&lt;a href=&quot;#Traverse&quot; class=&quot;headerlink&quot; title=&quot;Traverse&quot;&gt;&lt;/a&gt;Traverse&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
    
      <category term="shell" scheme="blog.lovesora.pro/tags/shell/"/>
    
      <category term="command" scheme="blog.lovesora.pro/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>Bazel Basic</title>
    <link href="blog.lovesora.pro/2019/12/16/bazel/basic/"/>
    <id>blog.lovesora.pro/2019/12/16/bazel/basic/</id>
    <published>2019-12-16T14:22:53.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Concepts-and-Terminology"><a href="#Concepts-and-Terminology" class="headerlink" title="Concepts and Terminology"></a>Concepts and Terminology</h2><ul><li>Workspace</li><li>Repositories</li><li>Packages</li><li>Targets<ul><li>files<ul><li>source files</li><li>generated files</li></ul></li><li>rules</li></ul></li><li>Labels<ul><li>labels belones to only the first parent package(otherwise, it will throw a error “crosses a package boundary”</li></ul></li></ul><h2 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h2><h3 id="Phases"><a href="#Phases" class="headerlink" title="Phases"></a>Phases</h3><blockquote><p>It will be important to understand the three phases of a build (loading, analysis and execution)</p></blockquote><h3 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h3><blockquote><ul><li><em>Dependency attributes</em>, such as  <code>attr.label</code>  and  <code>attr.label_list</code>, declare a dependency from the target that owns the attribute to the target whose label appears in the attribute’s value. This kind of attribute forms the basis of the target graph.</li></ul></blockquote><blockquote><p><em>Output attributes</em>, such as <code>attr.output</code> and <code>attr.output_list</code>, declare an output file that the target generates.</p></blockquote><blockquote><p>Both dependency attributes and output attributes take in label values.</p></blockquote><h4 id="Private-Attribute"><a href="#Private-Attribute" class="headerlink" title="Private Attribute"></a>Private Attribute</h4><blockquote><p>Sometimes we want to not only provide a default value, but prevent the user from overriding this default. To do this, you can make the attribute <em>private</em> by giving it a name that begins with an underscore (<code>_</code>). Private attributes must have default values. It generally only makes sense to use private attributes for implicit dependencies.</p></blockquote><h3 id="Implementation-Function"><a href="#Implementation-Function" class="headerlink" title="Implementation Function"></a>Implementation Function</h3><p>Implementation functions take exactly one parameter: a  <a href="https://docs.bazel.build/versions/1.2.0/skylark/lib/ctx.html" target="_blank" rel="noopener">rule context</a>, conventionally named  <code>ctx</code>. It can be used to:</p><ul><li><p>access attribute values and obtain handles on declared input and output files;</p></li><li><p>create actions; and</p></li><li><p>pass information to other targets that depend on this one, via  <a href="https://docs.bazel.build/versions/1.2.0/skylark/rules.html#providers" target="_blank" rel="noopener">providers</a>.</p></li></ul><!--stackedit_data:eyJoaXN0b3J5IjpbMjg2NTY4NTIwLC0xNTUyNjU0MTgyLC00NTUwMDI1NjUsMjA1ODk1OTM3NiwtMTMyNzg5MTg0MSw0MjU3NDIwLC02MjE1NDQyOTksLTIyNzczOTI1MF19-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Concepts-and-Terminology&quot;&gt;&lt;a href=&quot;#Concepts-and-Terminology&quot; class=&quot;headerlink&quot; title=&quot;Concepts and Terminology&quot;&gt;&lt;/a&gt;Concepts and T
      
    
    </summary>
    
    
    
      <category term="bazel" scheme="blog.lovesora.pro/tags/bazel/"/>
    
      <category term="build cache" scheme="blog.lovesora.pro/tags/build-cache/"/>
    
  </entry>
  
  <entry>
    <title>Git Shallow Clone</title>
    <link href="blog.lovesora.pro/2019/12/03/vcs/git/git-shallow-clone/"/>
    <id>blog.lovesora.pro/2019/12/03/vcs/git/git-shallow-clone/</id>
    <published>2019-12-03T17:17:39.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-clone-a-commit-from-a-heavy-repo"><a href="#How-to-clone-a-commit-from-a-heavy-repo" class="headerlink" title="How to clone a commit from a heavy repo ?"></a>How to clone a commit from a heavy repo ?</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/xxx/yyy.git</span><br></pre></td></tr></table></figure><p>But there is no more messages about commit history. How to resolve it?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git fetch --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">--unshallow</span><br><span class="line">    Convert a shallow repository to a complete one, removing all the limitations imposed by shallow repositories.</span><br></pre></td></tr></table></figure><!--stackedit_data:eyJoaXN0b3J5IjpbNzk4MTcyNTg4XX0=-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;How-to-clone-a-commit-from-a-heavy-repo&quot;&gt;&lt;a href=&quot;#How-to-clone-a-commit-from-a-heavy-repo&quot; class=&quot;headerlink&quot; title=&quot;How to clone a
      
    
    </summary>
    
    
    
      <category term="git" scheme="blog.lovesora.pro/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Differences about Docker in k8s</title>
    <link href="blog.lovesora.pro/2019/12/03/k8s/docker/"/>
    <id>blog.lovesora.pro/2019/12/03/k8s/docker/</id>
    <published>2019-12-03T15:50:36.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Difference-between-Docker-ENTRYPOINT-and-Kubernetes-container-spec-COMMAND"><a href="#Difference-between-Docker-ENTRYPOINT-and-Kubernetes-container-spec-COMMAND" class="headerlink" title="Difference between Docker ENTRYPOINT and Kubernetes container spec COMMAND"></a>Difference between Docker ENTRYPOINT and Kubernetes container spec COMMAND</h2><p>Kubernetes provides us with multiple options on how to use these commands:</p><p>When you override the default Entrypoint and Cmd in Kubernetes .yaml file, these rules apply:</p><ul><li>If you do not supply command or args for a Container, the defaults defined in the Docker image are used.</li><li>If you supply a command but no args for a Container, only the supplied command is used. The default EntryPoint and the default Cmd defined in the Docker image are ignored.</li><li>If you supply only args for a Container, the default Entrypoint defined in the Docker image is run with the args that you supplied.</li><li>If you supply a command and args, the default Entrypoint and the default Cmd defined in the Docker image are ignored. Your command is run with your args.<br>&lt;!–stackedit_data:<br>eyJoaXN0b3J5IjpbLTE1MTczNTI0OTFdfQ==</li><li>-&gt;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Difference-between-Docker-ENTRYPOINT-and-Kubernetes-container-spec-COMMAND&quot;&gt;&lt;a href=&quot;#Difference-between-Docker-ENTRYPOINT-and-Kuber
      
    
    </summary>
    
    
    
      <category term="k8s" scheme="blog.lovesora.pro/tags/k8s/"/>
    
      <category term="docker" scheme="blog.lovesora.pro/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>The Cache of React Pipeline</title>
    <link href="blog.lovesora.pro/2019/12/02/k8s/cache/"/>
    <id>blog.lovesora.pro/2019/12/02/k8s/cache/</id>
    <published>2019-12-02T11:41:02.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Build-Cache"><a href="#Build-Cache" class="headerlink" title="Build Cache"></a>Build Cache</h2><p>我们在做pipeline相关优化的时候，一个很重要的指标就是构建时间，最基本的优化就是构建缓存。</p><p>基本思路就是每次 <code>build</code> 之前 <code>restore</code> 上次的缓存，构建完成后 <code>rebuild</code> 当前缓存。</p><p><code>cache</code> 我们试过几种种:</p><ul><li>node 上的 <code>volume</code>： EBS(RWO), EFS(RWX)等</li><li>s3</li></ul><p>EBS只支持 <code>ReadWriteOnly</code>, EFS支持 <code>ReadWriteMany</code>，由于我们的pipeline很可能会同时构建多次，所以需要支持 <code>RWX</code>  的 <code>EFS</code>，最开始我们在尝试的时候发现如果直接缓存不 <code>compress</code> 的话，传输性能存在瓶颈，总体构建时间反而降低，所以在上传之前我们先使用 tar (no compress) archive 一下。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">steps:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restore-cache</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">amazonlinux-cache</span></span><br><span class="line">  <span class="attr">workingDir:</span> <span class="string">/workspace/src</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">2000m</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">  <span class="attr">args:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line">    <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">$&#123;CACHE_FOLDER&#125;</span></span><br><span class="line">    <span class="string">export</span> <span class="string">BUCKET_URL=s3://build-cache</span></span><br><span class="line">    <span class="string">aws</span> <span class="string">s3</span> <span class="string">cp</span> <span class="string">$&#123;BUCKET_URL&#125;/$(inputs.params.REPO_NAME)/$&#123;NODE_MODULES_TAR_NAME&#125;</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;NODE_MODULES_TAR_NAME&#125;</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">aws</span> <span class="string">s3</span> <span class="string">cp</span> <span class="string">$&#123;BUCKET_URL&#125;/$(inputs.params.REPO_NAME)/$&#123;BUILD_FILE_TAR_NAME&#125;</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;BUILD_FILE_TAR_NAME&#125;</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="string">tar</span> <span class="string">-xf</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;NODE_MODULES_TAR_NAME&#125;</span> <span class="string">-C</span> <span class="string">/</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">tar</span> <span class="string">-xf</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;BUILD_FILE_TAR_NAME&#125;</span> <span class="string">-C</span> <span class="string">/</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build-from-src</span></span><br><span class="line">  <span class="attr">volumeMounts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">npmrc</span></span><br><span class="line">    <span class="attr">mountPath:</span> <span class="string">/builder/home/</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">node:12</span></span><br><span class="line">  <span class="attr">workingDir:</span> <span class="string">/workspace/src</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">4000m</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">  <span class="attr">args:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line">    <span class="string">[</span> <span class="string">-d</span> <span class="string">/workspace/src/node_modules</span> <span class="string">]</span> <span class="string">&amp;&amp;</span> <span class="string">echo</span> <span class="string">"node_modules has been restored from cache"</span> <span class="string">||</span> <span class="string">echo</span> <span class="string">"node_modules cache not found"</span></span><br><span class="line">    <span class="string">[</span> <span class="string">-d</span> <span class="string">/workspace/src/$(inputs.params.pathToBuildCache)</span> <span class="string">]</span> <span class="string">&amp;&amp;</span> <span class="string">echo</span> <span class="string">"$(inputs.params.pathToBuildCache) has been restored from cache\n"</span> <span class="string">||</span> <span class="string">echo</span> <span class="string">"$(inputs.params.pathToBuildCache) cache not found\n"</span></span><br><span class="line">    <span class="string">echo</span> <span class="string">"start building..."</span></span><br><span class="line"></span><br><span class="line">    <span class="string">$(inputs.params.buildCommands)</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rebuild-cache</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">amazonlinux-cache</span></span><br><span class="line">  <span class="attr">workingDir:</span> <span class="string">/workspace/src</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">2000m</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">AWS_DEFAULT_REGION</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">ap-northeast-1</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">  <span class="attr">args:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">|</span></span><br><span class="line">    <span class="comment"># check if skip</span></span><br><span class="line">    <span class="string">if</span> <span class="string">[</span> <span class="string">"$(inputs.params.skipRebuildCache)"</span> <span class="string">==</span> <span class="string">"true"</span> <span class="string">];</span> <span class="string">then</span></span><br><span class="line">      <span class="string">echo</span> <span class="string">'rebuild cache is skipped'</span></span><br><span class="line">      <span class="string">exit</span> <span class="number">0</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># tar</span></span><br><span class="line">    <span class="string">export</span> <span class="string">SRC_FOLDER=/workspace/src</span></span><br><span class="line">    <span class="string">export</span> <span class="string">NODE_MODULES_FOLDER=$&#123;SRC_FOLDER&#125;/node_modules</span></span><br><span class="line">    <span class="string">export</span> <span class="string">BUILD_FOLDER=$&#123;SRC_FOLDER&#125;/$(inputs.params.pathToBuildCache)</span></span><br><span class="line"></span><br><span class="line">    <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">$&#123;CACHE_FOLDER&#125;</span></span><br><span class="line">    <span class="string">tar</span> <span class="string">-cf</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;NODE_MODULES_TAR_NAME&#125;</span> <span class="string">$&#123;NODE_MODULES_FOLDER&#125;</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">tar</span> <span class="string">-cf</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;BUILD_FILE_TAR_NAME&#125;</span> <span class="string">$&#123;BUILD_FOLDER&#125;</span> <span class="string">||</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># upload</span></span><br><span class="line">    <span class="string">export</span> <span class="string">BUCKET_URL=s3://build-cache</span></span><br><span class="line">    <span class="string">aws</span> <span class="string">s3</span> <span class="string">cp</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;NODE_MODULES_TAR_NAME&#125;</span> <span class="string">$&#123;BUCKET_URL&#125;/$(inputs.params.REPO_NAME)/$&#123;NODE_MODULES_TAR_NAME&#125;</span></span><br><span class="line">    <span class="string">aws</span> <span class="string">s3</span> <span class="string">cp</span> <span class="string">$&#123;CACHE_FOLDER&#125;/$&#123;BUILD_FILE_TAR_NAME&#125;</span> <span class="string">$&#123;BUCKET_URL&#125;/$(inputs.params.REPO_NAME)/$&#123;BUILD_FILE_TAR_NAME&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><ul><li><a href="https://webpack.js.org/configuration/other-options/#cache" target="_blank" rel="noopener">webpack build cache</a></li><li><a href="https://github.com/tektoncd/pipeline/tree/master/docs" target="_blank" rel="noopener">tekton</a><br>&lt;!–stackedit_data:<br>eyJoaXN0b3J5IjpbLTc3NDQ4MzMyNiwtMTMxNjEyODAxMywtMT<br>UyMjcwMDM0Ml19</li><li>-&gt;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Build-Cache&quot;&gt;&lt;a href=&quot;#Build-Cache&quot; class=&quot;headerlink&quot; title=&quot;Build Cache&quot;&gt;&lt;/a&gt;Build Cache&lt;/h2&gt;&lt;p&gt;我们在做pipeline相关优化的时候，一个很重要的指标就是构建时间
      
    
    </summary>
    
    
    
      <category term="cache" scheme="blog.lovesora.pro/tags/cache/"/>
    
      <category term="pipeline" scheme="blog.lovesora.pro/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>k8s pvc subPath</title>
    <link href="blog.lovesora.pro/2019/12/01/k8s/subPath/"/>
    <id>blog.lovesora.pro/2019/12/01/k8s/subPath/</id>
    <published>2019-12-01T18:41:03.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？"><a href="#我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？" class="headerlink" title="我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？"></a>我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？</h3><blockquote><p>subPath 的目的是为了在单一Pod中多次使用同一个volume而设计的。</p></blockquote><p> <code>subPath</code>: <code>Path within the volume from which the container&#39;s volume should be mounted</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-lamp-site</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">    <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">        <span class="attr">value:</span> <span class="string">"rootpasswd"</span> </span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">site-data</span></span><br><span class="line">        <span class="attr">subPath:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">php</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">php:7.0-apache</span></span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/www/html</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">site-data</span></span><br><span class="line">        <span class="attr">subPath:</span> <span class="string">html</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">site-data</span></span><br><span class="line">      <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">        <span class="attr">claimName:</span> <span class="string">my-lamp-site-data</span></span><br></pre></td></tr></table></figure><!--stackedit_data:eyJoaXN0b3J5IjpbLTEyODg2OTg1MTcsLTE1NjQ5MzE3NDgsMjgzMjAwODM1LDEzNzIwODIxNTFdfQ==-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？&quot;&gt;&lt;a href=&quot;#我们希望将文件挂载到某个目录，但希望只是挂载该文件，不要影响挂载目录下的其他文件。有办法吗？&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
    
      <category term="k8s" scheme="blog.lovesora.pro/tags/k8s/"/>
    
      <category term="volume" scheme="blog.lovesora.pro/tags/volume/"/>
    
      <category term="subPath" scheme="blog.lovesora.pro/tags/subPath/"/>
    
  </entry>
  
  <entry>
    <title>React Suspense</title>
    <link href="blog.lovesora.pro/2019/11/22/fe/react/suspense/"/>
    <id>blog.lovesora.pro/2019/11/22/fe/react/suspense/</id>
    <published>2019-11-22T16:54:03.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Data-fetch-ways"><a href="#Data-fetch-ways" class="headerlink" title="Data fetch ways"></a>Data fetch ways</h2><h3 id="Approach-1-Fetch-on-Render"><a href="#Approach-1-Fetch-on-Render" class="headerlink" title="Approach 1: Fetch-on-Render"></a>Approach 1: Fetch-on-Render</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ProfilePage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [user, setUser] = useState(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    fetchUser().then(<span class="function"><span class="params">u</span> =&gt;</span> setUser(u));</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (user === <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Loading profile...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;h1&gt;&#123;user.name&#125;&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">      &lt;ProfileTimeline /</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">function ProfileTimeline() &#123;</span></span><br><span class="line"><span class="regexp">  const [posts, setPosts] = useState(null);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  useEffect(() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">    fetchPosts().then(p =&gt; setPosts(p));</span></span><br><span class="line"><span class="regexp">  &#125;, []);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  if (posts === null) &#123;</span></span><br><span class="line"><span class="regexp">    return &lt;h2&gt;Loading posts...&lt;/</span>h2&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;posts.map(<span class="function"><span class="params">post</span> =&gt;</span> (</span><br><span class="line">        &lt;li key=&#123;post.id&#125;&gt;&#123;post.text&#125;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      ))&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Approach-2-Fetch-Then-Render-not-using-Suspense"><a href="#Approach-2-Fetch-Then-Render-not-using-Suspense" class="headerlink" title="Approach 2: Fetch-Then-Render (not using Suspense)"></a>Approach 2: Fetch-Then-Render (not using Suspense)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Kick off fetching as early as possible</span></span><br><span class="line"><span class="keyword">const</span> promise = fetchProfileData();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ProfilePage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> [user, setUser] = useState(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> [posts, setPosts] = useState(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    promise.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      setUser(data.user);</span><br><span class="line">      setPosts(data.posts);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (user === <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Loading profile...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">      &lt;h1&gt;&#123;user.name&#125;&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">      &lt;ProfileTimeline posts=&#123;posts&#125; /</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ The child doesn't trigger fetching anymore</span></span><br><span class="line"><span class="regexp">function ProfileTimeline(&#123; posts &#125;) &#123;</span></span><br><span class="line"><span class="regexp">  if (posts === null) &#123;</span></span><br><span class="line"><span class="regexp">    return &lt;h2&gt;Loading posts...&lt;/</span>h2&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;posts.map(<span class="function"><span class="params">post</span> =&gt;</span> (</span><br><span class="line">        &lt;li key=&#123;post.id&#125;&gt;&#123;post.text&#125;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      ))&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--stackedit_data:eyJoaXN0b3J5IjpbLTEyNTAxODI1MjJdfQ==-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Data-fetch-ways&quot;&gt;&lt;a href=&quot;#Data-fetch-ways&quot; class=&quot;headerlink&quot; title=&quot;Data fetch ways&quot;&gt;&lt;/a&gt;Data fetch ways&lt;/h2&gt;&lt;h3 id=&quot;Approach-1-Fe
      
    
    </summary>
    
    
    
      <category term="react" scheme="blog.lovesora.pro/tags/react/"/>
    
      <category term="data fetch" scheme="blog.lovesora.pro/tags/data-fetch/"/>
    
  </entry>
  
  <entry>
    <title>Web Spec</title>
    <link href="blog.lovesora.pro/2019/11/22/web/spec/"/>
    <id>blog.lovesora.pro/2019/11/22/web/spec/</id>
    <published>2019-11-22T13:39:24.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="be"><a href="#be" class="headerlink" title="be"></a>be</h2><ul><li><code>/api</code> 为统一前缀</li></ul><h2 id="fe"><a href="#fe" class="headerlink" title="fe"></a>fe</h2><ul><li><code>cookie</code> 没有要求的话以 <code>根域</code> 为基础</li></ul><!--stackedit_data:eyJoaXN0b3J5IjpbMjAyODYwNjI0LC03NjYxNDk5ODJdfQ==-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;be&quot;&gt;&lt;a href=&quot;#be&quot; class=&quot;headerlink&quot; title=&quot;be&quot;&gt;&lt;/a&gt;be&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api&lt;/code&gt; 为统一前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;fe&quot;&gt;&lt;a href=&quot;#fe&quot; cla
      
    
    </summary>
    
    
    
      <category term="spec" scheme="blog.lovesora.pro/tags/spec/"/>
    
      <category term="web" scheme="blog.lovesora.pro/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Tekton Pipeline Hello World Tutorial</title>
    <link href="blog.lovesora.pro/2019/11/21/pipeline/tekton/"/>
    <id>blog.lovesora.pro/2019/11/21/pipeline/tekton/</id>
    <published>2019-11-21T00:14:47.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-World-Tutorial"><a href="#Hello-World-Tutorial" class="headerlink" title="Hello World Tutorial"></a>Hello World Tutorial</h1><p>Welcome to the Tekton Pipeline tutorial!</p><p>This tutorial will walk you through creating and running some simple<br><code>Tasks</code> &amp; <code>Pipelines</code>and running them by creating<br><code>TaskRuns</code> and <code>PipelineRuns</code>.</p><ul><li><a href="#task">Creating a hello world <code>Task</code></a></li><li><a href="#pipeline">Creating a hello world <code>Pipeline</code></a></li></ul><p>Before starting this tutorial, please install the <a href="https://github.com/tektoncd/cli" target="_blank" rel="noopener">Tekton CLI</a>.</p><p><strong>Note:</strong> <a href="#local-development">This tutorial can be run on a local workstation</a></p><h2 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h2><p>The main objective of Tekton Pipelines is to run your Task individually or as a<br>part of a Pipeline. Every <code>Task</code> runs as a Pod on your Kubernetes cluster with<br>each step as its own container.</p><p>A <code>Task</code> defines the work that needs to be executed, for example the<br>following is a simple <code>Task</code> that will echo hello world:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Task</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">echo-hello-world</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">echo</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">ubuntu</span></span><br><span class="line">      <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">echo</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"hello world"</span></span><br></pre></td></tr></table></figure><p>The <code>steps</code> are a series of commands to be sequentially executed by the <code>Task</code>.</p><p>A <code>TaskRun</code> runs the <code>Task</code> you defined. Here is a simple example<br>of a <code>TaskRun</code> you can use to execute your <code>Task</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">TaskRun</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">echo-hello-world-task-run</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">taskRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">echo-hello-world</span></span><br></pre></td></tr></table></figure><p>To apply the yaml files, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &lt;name-of-file.yaml&gt;</span><br></pre></td></tr></table></figure><p>To see the output of the <code>TaskRun</code>, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkn taskrun describe <span class="built_in">echo</span>-hello-world-task-run</span><br></pre></td></tr></table></figure><p>You will get an output similar to the following:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Name:        echo-hello-world-task-run</span><br><span class="line">Namespace:   default</span><br><span class="line">Task Ref:    echo-hello-world</span><br><span class="line"></span><br><span class="line">Status</span><br><span class="line">STARTED         DURATION    STATUS</span><br><span class="line">4 minutes ago   9 seconds   Succeeded</span><br><span class="line"></span><br><span class="line">Input Resources</span><br><span class="line">No resources</span><br><span class="line"></span><br><span class="line">Output Resources</span><br><span class="line">No resources</span><br><span class="line"></span><br><span class="line">Params</span><br><span class="line">No params</span><br><span class="line"></span><br><span class="line">Steps</span><br><span class="line">NAME</span><br><span class="line">echo</span><br></pre></td></tr></table></figure><p>The status of type <code>Succeeded</code> shows that the <code>Task</code> ran successfully.</p><p>To see the actual outcome, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkn taskrun logs <span class="built_in">echo</span>-hello-world-task-run</span><br></pre></td></tr></table></figure><p>You will get an output similar to this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[echo] hello world</span><br></pre></td></tr></table></figure><h3 id="Task-Inputs-and-Outputs"><a href="#Task-Inputs-and-Outputs" class="headerlink" title="Task Inputs and Outputs"></a>Task Inputs and Outputs</h3><p>In more common scenarios, a <code>Task</code> needs multiple steps with input and output<br>resources to process. For example a <code>Task</code> could fetch source code from a GitHub<br>repository and build a Docker image from it.</p><p><code>PipelineResources</code> are used to define the artifacts that can be<br>passed in and out of a <code>Task</code>. There are a few system defined resource types ready<br>to use, and the following are two examples of the resources commonly needed.</p><p>The <code>git</code> resource represents a git repository with<br>a specific revision:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PipelineResource</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">skaffold-git</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">revision</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">master</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">url</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">https://github.com/GoogleContainerTools/skaffold</span> <span class="comment">#configure: change if you want to build something else, perhaps from your own local git repository.</span></span><br></pre></td></tr></table></figure><p>The <code>image</code> resource represents the image to be<br>built by the <code>Task</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PipelineResource</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">skaffold-image-leeroy-web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">image</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">url</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">gcr.io/&lt;use</span> <span class="string">your</span> <span class="string">project&gt;/leeroy-web</span> <span class="comment">#configure: replace with where the image should go: perhaps your local registry or Dockerhub with a secret and configured service account</span></span><br></pre></td></tr></table></figure><p>The following is a <code>Task</code> with inputs and outputs. The input resource is a<br>GitHub repository and the output is the image produced from that source. The<br>args of the <code>Task</code> command support variable substitution so that the definition of <code>Task</code> is<br>constant and the value of parameters can change in runtime.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Task</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">build-docker-image-from-git-source</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-source</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pathToDockerFile</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">description:</span> <span class="string">The</span> <span class="string">path</span> <span class="string">to</span> <span class="string">the</span> <span class="string">dockerfile</span> <span class="string">to</span> <span class="string">build</span></span><br><span class="line">        <span class="attr">default:</span> <span class="string">/workspace/docker-source/Dockerfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pathToContext</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">description:</span></span><br><span class="line">          <span class="string">The</span> <span class="string">build</span> <span class="string">context</span> <span class="string">used</span> <span class="string">by</span> <span class="string">Kaniko</span></span><br><span class="line">          <span class="string">(https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)</span></span><br><span class="line">        <span class="attr">default:</span> <span class="string">/workspace/docker-source</span></span><br><span class="line">  <span class="attr">outputs:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">builtImage</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">image</span></span><br><span class="line">  <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build-and-push</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">gcr.io/kaniko-project/executor:v0.14.0</span></span><br><span class="line">      <span class="comment"># specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"DOCKER_CONFIG"</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"/builder/home/.docker/"</span></span><br><span class="line">      <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/kaniko/executor</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--dockerfile=$(inputs.params.pathToDockerFile)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--destination=$(outputs.resources.builtImage.url)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--context=$(inputs.params.pathToContext)</span></span><br></pre></td></tr></table></figure><p>Before you continue with the <code>TaskRun</code> you will have to<br>create a <code>secret</code> to push your image to your desired registry.</p><p>To do so, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret docker-registry regcred \</span><br><span class="line">                    --docker-server=&lt;your-registry-server&gt; \</span><br><span class="line">                    --docker-username=&lt;your-name&gt; \</span><br><span class="line">                    --docker-password=&lt;your-pword&gt; \</span><br><span class="line">                    --docker-email=&lt;your-email&gt;</span><br></pre></td></tr></table></figure><p>To be able to use this <code>secret</code> the <code>TaskRun</code> needs to use a <code>ServiceAccount</code>.</p><p>The <code>ServiceAccount</code> should look similar to this:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tutorial-service</span></span><br><span class="line"><span class="attr">secrets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">regcred</span></span><br></pre></td></tr></table></figure><p>You need to put your new <code>ServiceAccount</code> into action, to do so, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &lt;name-of-file.yaml&gt;</span><br></pre></td></tr></table></figure><p>Now you are ready for your first <code>TaskRun</code>.</p><p>A <code>TaskRun</code> binds the inputs and outputs to already defined <code>PipelineResources</code>,<br>sets values to the parameters used for variable substitution in addition to executing the<br><code>Task</code> steps.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">TaskRun</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">build-docker-image-from-git-source-task-run</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceAccountName:</span> <span class="string">tutorial-service</span></span><br><span class="line">  <span class="attr">taskRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">build-docker-image-from-git-source</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-source</span></span><br><span class="line">        <span class="attr">resourceRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">skaffold-git</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pathToDockerFile</span></span><br><span class="line">        <span class="attr">value:</span> <span class="string">Dockerfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pathToContext</span></span><br><span class="line">        <span class="attr">value:</span> <span class="string">/workspace/docker-source/examples/microservices/leeroy-web</span> <span class="comment">#configure: may change according to your source</span></span><br><span class="line">  <span class="attr">outputs:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">builtImage</span></span><br><span class="line">        <span class="attr">resourceRef:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">skaffold-image-leeroy-web</span></span><br></pre></td></tr></table></figure><p>To apply the yaml files use the following command, you need to apply the two<br><code>PipelineResources</code>, the <code>Task</code> and <code>TaskRun</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &lt;name-of-file.yaml&gt;</span><br></pre></td></tr></table></figure><p>To see all the resource created so far as part of Tekton Pipelines, run the<br>command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get tekton-pipelines</span><br></pre></td></tr></table></figure><p>You will get an output similar to the following:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">NAME                                                   AGE</span><br><span class="line">taskruns&#x2F;build-docker-image-from-git-source-task-run   30s</span><br><span class="line"></span><br><span class="line">NAME                                          AGE</span><br><span class="line">pipelineresources&#x2F;skaffold-git                6m</span><br><span class="line">pipelineresources&#x2F;skaffold-image-leeroy-web   7m</span><br><span class="line"></span><br><span class="line">NAME                                       AGE</span><br><span class="line">tasks&#x2F;build-docker-image-from-git-source   7m</span><br></pre></td></tr></table></figure><p>To see the output of the TaskRun, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkn taskrun describe build-docker-image-from-git-source-task-run</span><br></pre></td></tr></table></figure><p>You will get an output similar to the following:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Name:        build-docker-image-from-git-source-task-run</span><br><span class="line">Namespace:   default</span><br><span class="line">Task Ref:    build-docker-image-from-git-source</span><br><span class="line"></span><br><span class="line">Status</span><br><span class="line">STARTED       DURATION     STATUS</span><br><span class="line">2 hours ago   56 seconds   Succeeded</span><br><span class="line"></span><br><span class="line">Input Resources</span><br><span class="line">NAME            RESOURCE REF</span><br><span class="line">docker-source   skaffold-git</span><br><span class="line"></span><br><span class="line">Output Resources</span><br><span class="line">NAME         RESOURCE REF</span><br><span class="line">builtImage   skaffold-image-leeroy-web</span><br><span class="line"></span><br><span class="line">Params</span><br><span class="line">NAME               VALUE</span><br><span class="line">pathToDockerFile   Dockerfile</span><br><span class="line">pathToContext      &#x2F;workspace&#x2F;docker-source&#x2F;examples&#x2F;microservices&#x2F;leeroy-web</span><br><span class="line"></span><br><span class="line">Steps</span><br><span class="line">NAME</span><br><span class="line">build-and-push</span><br><span class="line">create-dir-builtimage-wtjh9</span><br><span class="line">git-source-skaffold-git-tck6k</span><br><span class="line">image-digest-exporter-hlbsq</span><br></pre></td></tr></table></figure><p>The status of type <code>Succeeded</code> shows the Task ran successfully and you<br>can also validate the Docker image is created in the location specified in the<br>resource definition.</p><p>If you run into issues, use the following command to receive the logs:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkn taskrun logs build-docker-image-from-git-source-task-run</span><br></pre></td></tr></table></figure><h2 id="Pipeline"><a href="#Pipeline" class="headerlink" title="Pipeline"></a>Pipeline</h2><p>A <code>Pipeline</code> defines a list of <code>Tasks</code> to execute in order, while<br>also indicating if any outputs should be used as inputs of a following <code>Task</code> by<br>using the <code>from</code> field and also indicating<br>the order of executing (using the <code>runAfter</code> and <code>from</code> fields).<br>The same variable substitution you used in <code>Tasks</code> is also available in a <code>Pipeline</code>.</p><p>For example:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pipeline</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tutorial-pipeline</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source-repo</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web-image</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">image</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build-skaffold-web</span></span><br><span class="line">      <span class="attr">taskRef:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">build-docker-image-from-git-source</span></span><br><span class="line">      <span class="attr">params:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pathToDockerFile</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">Dockerfile</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pathToContext</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/workspace/docker-source/examples/microservices/leeroy-web</span> <span class="comment">#configure: may change according to your source</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">inputs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-source</span></span><br><span class="line">            <span class="attr">resource:</span> <span class="string">source-repo</span></span><br><span class="line">        <span class="attr">outputs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">builtImage</span></span><br><span class="line">            <span class="attr">resource:</span> <span class="string">web-image</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">deploy-web</span></span><br><span class="line">      <span class="attr">taskRef:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">deploy-using-kubectl</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">inputs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">            <span class="attr">resource:</span> <span class="string">source-repo</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">image</span></span><br><span class="line">            <span class="attr">resource:</span> <span class="string">web-image</span></span><br><span class="line">            <span class="attr">from:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">build-skaffold-web</span></span><br><span class="line">      <span class="attr">params:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">path</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/workspace/source/examples/microservices/leeroy-web/kubernetes/deployment.yaml</span> <span class="comment">#configure: may change according to your source</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">yamlPathToImage</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"spec.template.spec.containers[0].image"</span></span><br></pre></td></tr></table></figure><p>The above <code>Pipeline</code> is referencing a <code>Task</code> called <code>deploy-using-kubectl</code> which<br>can be found here:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Task</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deploy-using-kubectl</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">image</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">image</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">path</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">description:</span> <span class="string">Path</span> <span class="string">to</span> <span class="string">the</span> <span class="string">manifest</span> <span class="string">to</span> <span class="string">apply</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">yamlPathToImage</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">description:</span></span><br><span class="line">          <span class="string">The</span> <span class="string">path</span> <span class="string">to</span> <span class="string">the</span> <span class="string">image</span> <span class="string">to</span> <span class="string">replace</span> <span class="string">in</span> <span class="string">the</span> <span class="string">yaml</span> <span class="string">manifest</span> <span class="string">(arg</span> <span class="string">to</span> <span class="string">yq)</span></span><br><span class="line">  <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">replace-image</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">mikefarah/yq</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">["yq"]</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"w"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"-i"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"$(inputs.params.path)"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"$(inputs.params.yamlPathToImage)"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"$(inputs.resources.image.url)"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run-kubectl</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">lachlanevenson/k8s-kubectl</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">["kubectl"]</span></span><br><span class="line">      <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"apply"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"-f"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"$(inputs.params.path)"</span></span><br></pre></td></tr></table></figure><p>With the new <code>Task</code> inside of your <code>Pipeline</code>,<br>you need to give your <code>ServiceAccount</code> additional permissions to be able to execute the <code>run-kubectl</code> step.</p><p>First you have to create a new role, which you have to assign to your <code>ServiceAccount</code>,<br>to do so, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrole tutorial-role \</span><br><span class="line">               --verb=get,list,watch,create,update,patch,delete \</span><br><span class="line">               --resource=deployments</span><br></pre></td></tr></table></figure><p>Now you need to assign this new role <code>tutorial-role</code> to your <code>ServiceAccount</code>,<br>to do so, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding tutorial-binding \</span><br><span class="line">             --clusterrole=tutorial-role \</span><br><span class="line">             --serviceaccount=default:tutorial-service</span><br></pre></td></tr></table></figure><p>To run the <code>Pipeline</code>, create a <code>PipelineRun</code>as follows:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">tekton.dev/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PipelineRun</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tutorial-pipeline-run-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceAccountName:</span> <span class="string">tutorial-service</span></span><br><span class="line">  <span class="attr">pipelineRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">tutorial-pipeline</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">source-repo</span></span><br><span class="line">      <span class="attr">resourceRef:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">skaffold-git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web-image</span></span><br><span class="line">      <span class="attr">resourceRef:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">skaffold-image-leeroy-web</span></span><br></pre></td></tr></table></figure><p>The <code>PipelineRun</code> will create the <code>TaskRuns</code> corresponding to each <code>Task</code> and<br>collect the results.</p><p>To apply the yaml files use the following command, you will need to apply the<br><code>deploy-task</code> if you want to run the Pipeline.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &lt;name-of-file.yaml&gt;</span><br></pre></td></tr></table></figure><p>While the <code>Pipeline</code> is running, you can see what exactly is happening, just use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkn pipelinerun logs tutorial-pipeline-run-1 -f</span><br></pre></td></tr></table></figure><p>To see the output of the <code>PipelineRun</code>, use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkn pipelinerun describe tutorial-pipeline-run-1</span><br></pre></td></tr></table></figure><p>You will get an output similar to the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Name:           tutorial-pipeline-run-1</span><br><span class="line">Namespace:      default</span><br><span class="line">Pipeline Ref:   tutorial-pipeline</span><br><span class="line"></span><br><span class="line">Status</span><br><span class="line">STARTED       DURATION   STATUS</span><br><span class="line">4 hours ago   1 minute   Succeeded</span><br><span class="line"></span><br><span class="line">Resources</span><br><span class="line">NAME          RESOURCE REF</span><br><span class="line"><span class="built_in">source</span>-repo   skaffold-git</span><br><span class="line">web-image     skaffold-image-leeroy-web</span><br><span class="line"></span><br><span class="line">Params</span><br><span class="line">No params</span><br><span class="line"></span><br><span class="line">Taskruns</span><br><span class="line">NAME                                               TASK NAME            STARTED       DURATION     STATUS</span><br><span class="line">tutorial-pipeline-run-1-deploy-web-jjf2l           deploy-web           4 hours ago   14 seconds   Succeeded</span><br><span class="line">tutorial-pipeline-run-1-build-skaffold-web-7jgjh   build-skaffold-web   4 hours ago   1 minute     Succeeded</span><br></pre></td></tr></table></figure><p>The status of type <code>Succeeded</code> shows the <code>Pipeline</code> ran successfully, also<br>the status of individual Task runs are shown.</p><h2 id="Local-development"><a href="#Local-development" class="headerlink" title="Local development"></a>Local development</h2><h3 id="Known-good-configuration"><a href="#Known-good-configuration" class="headerlink" title="Known good configuration"></a>Known good configuration</h3><p>Tekton Pipelines is known to work with:</p><ul><li><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener">Docker for Desktop</a>. A known good<br>configuration specifies six CPUs, 10 GB of memory and 2 GB of swap space. </li><li>These <a href="https://github.com/tektoncd/pipeline/blob/master/DEVELOPMENT.md#requirements" target="_blank" rel="noopener">prerequisites</a>.</li><li>Setting <code>host.docker.local:5000</code> as an insecure registry with Docker for<br>Desktop (set via preferences or configuration, see the<br><a href="https://docs.docker.com/registry/insecure/" target="_blank" rel="noopener">Docker insecure registry documentation</a>.<br>for details)</li><li>Passing <code>--insecure</code> as an argument to Kaniko tasks lets us push to an<br>insecure registry.</li><li>Running a local (insecure) Docker registry: this can be run with</li></ul><p><code>docker run -d -p 5000:5000 --name registry-srv -e REGISTRY_STORAGE_DELETE_ENABLED=true registry:2</code></p><ul><li>Optionally, a Docker registry viewer so we can check our pushed images are<br>present:</li></ul><p><code>docker run -it -p 8080:8080 --name registry-web --link registry-srv -e REGISTRY_URL=http://registry-srv:5000/v2 -e REGISTRY_NAME=localhost:5000 hyper/docker-registry-web</code></p><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><ul><li>Any PipelineResource definitions of image type should be updated to use the<br>local registry by setting the url to<br><code>host.docker.internal:5000/myregistry/&lt;image name&gt;</code> equivalents</li><li>The <code>KO_DOCKER_REPO</code> variable should be set to <code>localhost:5000/myregistry</code><br>before using <code>ko</code></li><li>You are able to push to <code>host.docker.internal:5000/myregistry/&lt;image name&gt;</code><br>but your applications (e.g any deployment definitions) should reference<br><code>localhost:5000/myregistry/&lt;image name&gt;</code></li></ul><h3 id="Logging"><a href="#Logging" class="headerlink" title="Logging"></a>Logging</h3><ul><li>Logs can remain in-memory only as opposed to sent to a service such as<br><a href="https://cloud.google.com/logging/" target="_blank" rel="noopener">Stackdriver</a>.</li><li>See docs on getting logs from Runs</li></ul><p>Elasticsearch, Beats and Kibana can be deployed locally as a means to view logs:<br>an example is provided at<br><a href="https://github.com/mgreau/tekton-pipelines-elastic-tutorials" target="_blank" rel="noopener">https://github.com/mgreau/tekton-pipelines-elastic-tutorials</a>.</p><h2 id="Experimentation"><a href="#Experimentation" class="headerlink" title="Experimentation"></a>Experimentation</h2><p>Lines of code you may want to configure have the #configure annotation. This<br>annotation applies to subjects such as Docker registries, log output locations<br>and other nuances that may be specific to particular cloud providers or<br>services.</p><p>The <code>TaskRuns</code> have been created in the following<br>order:</p><ol><li><code>tutorial-pipeline-run-1-build-skaffold-web</code> - This runs the<br>Pipeline Task <code>build-skaffold-web</code> first,<br>because it has no <code>from</code> or <code>runAfter</code> clauses</li><li><code>tutorial-pipeline-run-1-deploy-web</code> - This runs <code>deploy-web</code> second, because<br>its input <code>web-image</code> comes <code>from</code><br><code>build-skaffold-web</code> (therefore <code>build-skaffold-web</code> must run before<br><code>deploy-web</code>).</li></ol><!--stackedit_data:eyJoaXN0b3J5IjpbMjE2Mjk5OTE3LC0xMzY1MDA5MDJdfQ==-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hello-World-Tutorial&quot;&gt;&lt;a href=&quot;#Hello-World-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;Hello World Tutorial&quot;&gt;&lt;/a&gt;Hello World Tutorial&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="pipeline" scheme="blog.lovesora.pro/tags/pipeline/"/>
    
      <category term="github" scheme="blog.lovesora.pro/tags/github/"/>
    
      <category term="tekton" scheme="blog.lovesora.pro/tags/tekton/"/>
    
  </entry>
  
  <entry>
    <title>Mac 初始化</title>
    <link href="blog.lovesora.pro/2019/11/19/mac/new-os/"/>
    <id>blog.lovesora.pro/2019/11/19/mac/new-os/</id>
    <published>2019-11-19T14:07:02.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xcode"><a href="#xcode" class="headerlink" title="xcode"></a>xcode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><h3 id="homebrew"><a href="#homebrew" class="headerlink" title="homebrew"></a>homebrew</h3><blockquote><p><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><p>Install software</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># IDE</span></span><br><span class="line">brew install zsh</span><br><span class="line">brew install tmux</span><br><span class="line">brew install python</span><br><span class="line">brew install vim</span><br><span class="line">brew install nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Shell</span></span><br><span class="line">brew install hub</span><br><span class="line"></span><br><span class="line"><span class="comment"># CI/CD</span></span><br><span class="line">brew install go</span><br><span class="line">brew install kubernetes-cli</span><br><span class="line">brew install kubernetes-helm</span><br><span class="line">brew install kubectx</span><br></pre></td></tr></table></figure><h3 id="Google-Drive"><a href="#Google-Drive" class="headerlink" title="Google Drive"></a>Google Drive</h3><blockquote><p><a href="https://www.google.com/drive/download/" target="_blank" rel="noopener">https://www.google.com/drive/download/</a></p></blockquote><ul><li>alfred</li><li>spectacle</li><li>shadowsocks-ng</li><li>karabiner</li><li>mailspring</li></ul><h3 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.vimrc</span><br></pre></td></tr></table></figure><!--stackedit_data:eyJoaXN0b3J5IjpbMTQ5MTczMDczOV19-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;xcode&quot;&gt;&lt;a href=&quot;#xcode&quot; class=&quot;headerlink&quot; title=&quot;xcode&quot;&gt;&lt;/a&gt;xcode&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="mac" scheme="blog.lovesora.pro/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>JS 动态加载字体</title>
    <link href="blog.lovesora.pro/2019/05/21/javascript/dynamic/font/"/>
    <id>blog.lovesora.pro/2019/05/21/javascript/dynamic/font/</id>
    <published>2019-05-21T10:09:21.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Axios-FileReader"><a href="#Axios-FileReader" class="headerlink" title="Axios + FileReader"></a>Axios + FileReader</h1><blockquote><p>FileReader 对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，使用 File 或 Blob 对象指定要读取的文件或数据。</p></blockquote><blockquote><p>File 对象是来自用户在一个 input 元素上选择文件后返回的 FileList 对象,也可以是来自由拖放操作生成的 DataTransfer 对象，或者来自 HTMLCanvasElement 上的 mozGetAsFile() API。</p></blockquote><blockquote><p>Blob 对象表示一个不可变、原始数据的类文件对象。Blob 表示的不一定是JavaScript原生格式的数据。File 接口基于Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> woffUrl = chrome.extension.getURL(<span class="string">'/libs/fonts/element-icons.woff'</span>);</span><br><span class="line"></span><br><span class="line">axios.get(woffUrl, &#123;</span><br><span class="line">  responseType: <span class="string">'blob'</span>,</span><br><span class="line">&#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">  reader.readAsDataURL(data.data);</span><br><span class="line">  reader.onloadend = <span class="function"><span class="params">_</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> woffData = reader.result;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> newStyle = <span class="built_in">document</span>.createElement(<span class="string">'style'</span>);</span><br><span class="line">    newStyle.appendChild(<span class="built_in">document</span>.createTextNode(<span class="string">`</span></span><br><span class="line"><span class="string">      @font-face &#123;</span></span><br><span class="line"><span class="string">          font-family: element-icons;</span></span><br><span class="line"><span class="string">          src: url(<span class="subst">$&#123;woffData&#125;</span>) format("woff");</span></span><br><span class="line"><span class="string">      &#125;\</span></span><br><span class="line"><span class="string">    `</span>));</span><br><span class="line">    <span class="built_in">document</span>.head.appendChild(newStyle);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Axios-FileReader&quot;&gt;&lt;a href=&quot;#Axios-FileReader&quot; class=&quot;headerlink&quot; title=&quot;Axios + FileReader&quot;&gt;&lt;/a&gt;Axios + FileReader&lt;/h1&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
    
      <category term="js" scheme="blog.lovesora.pro/tags/js/"/>
    
      <category term="font" scheme="blog.lovesora.pro/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>记一次数组赋值导致的页面卡死</title>
    <link href="blog.lovesora.pro/2019/04/29/fe/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/array/"/>
    <id>blog.lovesora.pro/2019/04/29/fe/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/array/</id>
    <published>2019-04-29T16:58:03.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个很简单的功能直接导致页面卡死</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [];</span><br><span class="line">arr[<span class="number">4294967294</span>] = <span class="string">'arr'</span>;</span><br><span class="line">arr.map(<span class="function"><span class="params">item</span> =&gt;</span> <span class="built_in">console</span>.log(item));</span><br></pre></td></tr></table></figure><p>尝试在控制台运行以上代码…</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><blockquote><p>JavaScript 使用一个32位整数，保存数组的元素个数。这意味着，数组成员最多只有 4294967295 个（232 - 1）个，也就是说length属性的最大值就是 4294967295。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>];</span><br><span class="line">arr.length <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">arr[<span class="number">2</span>] = <span class="string">'c'</span>;</span><br><span class="line">arr.length <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">arr[<span class="number">9</span>] = <span class="string">'d'</span>;</span><br><span class="line">arr.length <span class="comment">// 10</span></span><br><span class="line"></span><br><span class="line">arr[<span class="number">1000</span>] = <span class="string">'e'</span>;</span><br><span class="line">arr.length <span class="comment">// 1001</span></span><br></pre></td></tr></table></figure><p>数组的遍历会从索引 <code>0</code> 开始一直到 <code>length-1</code></p><p>所以，以下代码往往不可控</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> key: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [];</span><br><span class="line">arr[key] = ...</span><br><span class="line">arr.map(<span class="function"><span class="params">item</span> =&gt;</span> ...);</span><br></pre></td></tr></table></figure><p>对数组以一个 <code>number</code> 类型的变量作为 <code>key</code> 赋值后，再使用 <code>map, forEach, for...</code> 等来遍历数组时，由于 <code>key</code> 的值不可控，如果是数据库中的 <code>主键id</code>，那么在数据量小的时候发现不了什么异常，一旦数据量过大，浏览器直接就会卡死!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;一个很简单的功能直接导致页面卡死&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
    
      <category term="性能优化" scheme="blog.lovesora.pro/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="array" scheme="blog.lovesora.pro/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 内核升级</title>
    <link href="blog.lovesora.pro/2019/04/18/linux/ubuntu/upgrade-core/"/>
    <id>blog.lovesora.pro/2019/04/18/linux/ubuntu/upgrade-core/</id>
    <published>2019-04-18T20:31:59.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看发布版本号"><a href="#查看发布版本号" class="headerlink" title="查看发布版本号"></a>查看发布版本号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/issue</span><br><span class="line"></span><br><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h2 id="查看内核版本号"><a href="#查看内核版本号" class="headerlink" title="查看内核版本号"></a>查看内核版本号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 内核信息</span></span><br><span class="line">uname -sr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有信息</span></span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><h2 id="升级方式一"><a href="#升级方式一" class="headerlink" title="升级方式一"></a>升级方式一</h2><blockquote><p>到官网<a href="https://kernel.ubuntu.com/~kernel-ppa/mainline/" target="_blank" rel="noopener">kernel.ubuntu.com</a>下载对应deb文件</p></blockquote><p><img src="/assets/images/linux/ubuntu-kernel.png" alt="列表"></p><p><img src="/assets/images/linux/ubuntu-kernel-download.png" alt="文件"></p><p>下载 <code>*all.deb</code> 和所有 <code>*generic*.deb</code> 文件后，到对应文件夹下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure><blockquote><p>我是64位操作系统所以选择的 <code>amd64</code>，32位的小伙伴选 <code>i386</code>即可</p></blockquote><h2 id="升级方式二（推荐）"><a href="#升级方式二（推荐）" class="headerlink" title="升级方式二（推荐）"></a>升级方式二（推荐）</h2><h3 id="查看需要更新的内核命令"><a href="#查看需要更新的内核命令" class="headerlink" title="查看需要更新的内核命令"></a>查看需要更新的内核命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search linux</span><br></pre></td></tr></table></figure><h3 id="安装对应版本内核"><a href="#安装对应版本内核" class="headerlink" title="安装对应版本内核"></a>安装对应版本内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install linux-headers-5.0.8-050008-generic</span><br></pre></td></tr></table></figure><p><img src="/assets/images/linux/ubuntu-kernel-install.png" alt="install"></p><blockquote><p>安装完成后默认启动最新内核</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看内核启动顺序</span></span><br><span class="line">grep menuentry /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="卸载多余内核"><a href="#卸载多余内核" class="headerlink" title="卸载多余内核"></a>卸载多余内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看发布版本号&quot;&gt;&lt;a href=&quot;#查看发布版本号&quot; class=&quot;headerlink&quot; title=&quot;查看发布版本号&quot;&gt;&lt;/a&gt;查看发布版本号&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="blog.lovesora.pro/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Angular Router Reuse</title>
    <link href="blog.lovesora.pro/2019/04/11/fe/angular/router/reuse/"/>
    <id>blog.lovesora.pro/2019/04/11/fe/angular/router/reuse/</id>
    <published>2019-04-11T22:56:52.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>路由在切换时需要销毁当前组件，这在大多数情况下是符合预期的。但是有些时候在一些列表 + 详情的结构下，进入详情后再返回列表需要保留之前的列表状态，此时就需要缓存列表路由。</p><h3 id="现有方案"><a href="#现有方案" class="headerlink" title="现有方案"></a>现有方案</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// route-reuse.strategy.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  RouteReuseStrategy,</span><br><span class="line">  DefaultUrlSerializer,</span><br><span class="line">  ActivatedRouteSnapshot,</span><br><span class="line">  DetachedRouteHandle</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> SimpleReuseStrategy <span class="keyword">implements</span> RouteReuseStrategy &#123;</span><br><span class="line"></span><br><span class="line">  _cacheRouters: &#123; [key: <span class="built_in">string</span>]: <span class="built_in">any</span> &#125; = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  shouldDetach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> !!route.data.keep;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>._cacheRouters[<span class="keyword">this</span>._getCacheKey(route)] = &#123;</span><br><span class="line">      snapshot: route,</span><br><span class="line">      handle: handle</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  shouldAttach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> route.data.keep &amp;&amp; !!<span class="keyword">this</span>._cacheRouters[<span class="keyword">this</span>._getCacheKey(route)];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle &#123;</span><br><span class="line">    <span class="keyword">if</span> (!route.data.keep || !<span class="keyword">this</span>._cacheRouters[<span class="keyword">this</span>._getCacheKey(route)]) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._cacheRouters[<span class="keyword">this</span>._getCacheKey(route)].handle;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._getCacheKey(future) === <span class="keyword">this</span>._getCacheKey(curr);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _getCacheKey(route: ActivatedRouteSnapshot): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> route[<span class="string">'_routerState'</span>].url;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app-routing.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  RouteReuseStrategy,</span><br><span class="line">  RouterModule,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    RouterModule.forRoot(routes),</span><br><span class="line">  ],</span><br><span class="line">  providers: [&#123;</span><br><span class="line">    provide: RouteReuseStrategy,</span><br><span class="line">    useClass: SimpleReuseStrategy,</span><br><span class="line">  &#125;],</span><br><span class="line">  exports: [RouterModule]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppRoutingModule &#123; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意一个页面组件</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  NavigationEnd,</span><br><span class="line">  Router,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="keyword">private</span> router: Router</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">this</span>.router.events</span><br><span class="line">    .filter(<span class="function">(<span class="params">event</span>) =&gt;</span> event <span class="keyword">instanceof</span> NavigationEnd)</span><br><span class="line">    .subscribe(<span class="function">(<span class="params">event: NavigationEnd</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 这里需要判断一下当前路由，如果不加的话，每次路由结束的时候都会执行这里的方法</span></span><br><span class="line">      <span class="keyword">if</span> (event.url.indexOf(<span class="string">'currentRoute'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">// 进入当前路由需要重新执行的操作</span></span><br><span class="line">        ...</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><strong>同一父路由</strong> 下的子路由之间的跳转会重新初始化 parent component。翻了翻源代码这才找到了答案。</p><h2 id="RouteReuseStrategy-抽象类"><a href="#RouteReuseStrategy-抽象类" class="headerlink" title="RouteReuseStrategy 抽象类"></a>RouteReuseStrategy 抽象类</h2><blockquote><p>Provides a way to customize when activated routes get reused. <a href="https://github.com/angular/angular/blob/master/packages/router/src/route_reuse_strategy.ts" target="_blank" rel="noopener">code</a></p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">abstract</span> <span class="keyword">class</span> RouteReuseStrategy &#123;</span><br><span class="line">  <span class="comment">/** Determines if this route (and its subtree) should be detached to be reused later */</span></span><br><span class="line">  <span class="keyword">abstract</span> shouldDetach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Stores the detached route.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * Storing a `null` value should erase the previously stored value.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">abstract</span> store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle|<span class="literal">null</span>): <span class="built_in">void</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Determines if this route (and its subtree) should be reattached */</span></span><br><span class="line">  <span class="keyword">abstract</span> shouldAttach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Retrieves the previously stored route */</span></span><br><span class="line">  <span class="keyword">abstract</span> retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle|<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Determines if a route should be reused */</span></span><br><span class="line">  <span class="keyword">abstract</span> shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>官方默认的 <code>ReuseStrategy</code> 如下</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Does not detach any subtrees. Reuses routes as long as their route config is the same.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> DefaultRouteReuseStrategy <span class="keyword">implements</span> RouteReuseStrategy &#123;</span><br><span class="line">  shouldDetach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">  store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): <span class="built_in">void</span> &#123;&#125;</span><br><span class="line">  shouldAttach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle|<span class="literal">null</span> &#123; <span class="keyword">return</span> <span class="literal">null</span>; &#125;</span><br><span class="line">  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> future.routeConfig === curr.routeConfig;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对比发现 <code>shouldReuseRoute</code> 中的判断条件不一样。于是将原有代码做了一些调整</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> future.routeConfig === curr.routeConfig || <span class="keyword">this</span>._getCacheKey(future) === <span class="keyword">this</span>._getCacheKey(curr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时同一父路由下的子路由之间的跳转不会再初始化父组件了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;路由在切换时需要销毁当前组件，这在大多数情况下是符合预期的。但是有些时候在一些列表 + 详情的结构下，进入详情后再返回列表需要保留之前的列表
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="router" scheme="blog.lovesora.pro/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 插件 Gitment安装</title>
    <link href="blog.lovesora.pro/2019/04/10/blog/hexo/hexo-gitment/"/>
    <id>blog.lovesora.pro/2019/04/10/blog/hexo/hexo-gitment/</id>
    <published>2019-04-10T22:37:12.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h2><h3 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>or via npm:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save gitment</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'gitment/style/default.css'</span></span><br><span class="line"><span class="keyword">import</span> Gitment <span class="keyword">from</span> <span class="string">'gitment'</span></span><br></pre></td></tr></table></figure><h3 id="2-Register-An-OAuth-Application"><a href="#2-Register-An-OAuth-Application" class="headerlink" title="2. Register An OAuth Application"></a>2. Register An OAuth Application</h3><blockquote><p><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Click here</a></p></blockquote><p>注意 http 和 https</p><p><img src="/assets/images/blog/hexo/OAuth.png" alt="oauth"></p><h3 id="3-Render-Gitment"><a href="#3-Render-Gitment" class="headerlink" title="3. Render Gitment"></a>3. Render Gitment</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gitment = <span class="keyword">new</span> Gitment(&#123;</span><br><span class="line">  id: <span class="string">'Your page ID'</span>, <span class="comment">// optional</span></span><br><span class="line">  owner: <span class="string">'Your GitHub ID'</span>,</span><br><span class="line">  repo: <span class="string">'The repo to store comments'</span>,</span><br><span class="line">  oauth: &#123;</span><br><span class="line">    client_id: <span class="string">'Your client ID'</span>,</span><br><span class="line">    client_secret: <span class="string">'Your client secret'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// For more available options, check out the documentation below</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gitment.render(<span class="string">'comments'</span>)</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="comment">// gitment.render(document.getElementById('comments'))</span></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="comment">// document.body.appendChild(gitment.render())</span></span><br></pre></td></tr></table></figure><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Error-Comments-Not-Initialized"><a href="#Error-Comments-Not-Initialized" class="headerlink" title="Error: Comments Not Initialized"></a>Error: Comments Not Initialized</h3><p>出现这个错误一般有两个原因</p><ol><li>没有登录</li><li>OAuth配置有问题，检查一下回调是否正确</li></ol><h3 id="登录时浏览器弹出-Object-ProgressEvent"><a href="#登录时浏览器弹出-Object-ProgressEvent" class="headerlink" title="登录时浏览器弹出[Object ProgressEvent]"></a>登录时浏览器弹出[Object ProgressEvent]</h3><p>这个问题稍微复杂一点，简单一点的方案是直接替换 <code>gitment.browser.js</code>的路径</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//lovesora.github.io/gitment/style/default.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//lovesora.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果想要自己折腾的话略微有些麻烦，大致步骤如下</p><h4 id="1-clone-server"><a href="#1-clone-server" class="headerlink" title="1. clone server"></a>1. clone server</h4><p>在自己服务器上clone <a href="https://github.com/imsun/gh-oauth-server" target="_blank" rel="noopener">gh-oauth-server</a>, 执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 端口号默认是3000</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><p>启动 <code>gitment server</code></p><h4 id="2-clone-gitment"><a href="#2-clone-gitment" class="headerlink" title="2. clone gitment"></a>2. clone gitment</h4><p><code>fork</code> <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a>, <code>clone</code> fork的代码到本地，切到 <code>gh-pages</code> 分支</p><h4 id="3-修改url"><a href="#3-修改url" class="headerlink" title="3. 修改url"></a>3. 修改url</h4><p>将 <code>https://gh-oauth.imsun.net</code> 改为自己服务器的 <code>http(s)</code> + <code>domain or ip</code> + <code>port</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">_utils.http.post(<span class="string">'https://gh-oauth.imsun.net'</span>, &#123;</span><br><span class="line">  code: code,</span><br><span class="line">  client_id: client_id,</span><br><span class="line">  client_secret: client_secret</span><br><span class="line">&#125;, <span class="string">''</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  _this.accessToken = data.access_token;</span><br><span class="line">  _this.update();</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  _this.state.user.isLoggingIn = <span class="literal">false</span>;</span><br><span class="line">  alert(e);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">_utils.http.post(<span class="string">'https://gitment.lovesora.pro'</span>, &#123;</span><br><span class="line">  code: code,</span><br><span class="line">  client_id: client_id,</span><br><span class="line">  client_secret: client_secret</span><br><span class="line">&#125;, <span class="string">''</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  _this.accessToken = data.access_token;</span><br><span class="line">  _this.update();</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  _this.state.user.isLoggingIn = <span class="literal">false</span>;</span><br><span class="line">  alert(e);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="4-push代码-amp-修改文件路径"><a href="#4-push代码-amp-修改文件路径" class="headerlink" title="4. push代码 &amp; 修改文件路径"></a>4. push代码 &amp; 修改文件路径</h4><p>将刚才的改动 <code>push</code> 至 <code>github</code>，再修改 <code>gitment.browser.js</code> 的url 即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//[username].github.io/gitment/style/default.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//[username].github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Get-Started&quot;&gt;&lt;a href=&quot;#Get-Started&quot; class=&quot;headerlink&quot; title=&quot;Get Started&quot;&gt;&lt;/a&gt;Get Started&lt;/h2&gt;&lt;h3 id=&quot;1-Install&quot;&gt;&lt;a href=&quot;#1-Instal
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="blog.lovesora.pro/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Plugin 合集</title>
    <link href="blog.lovesora.pro/2019/04/09/blog/hexo/plugin/"/>
    <id>blog.lovesora.pro/2019/04/09/blog/hexo/plugin/</id>
    <published>2019-04-09T22:44:42.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-Mermaid-插件"><a href="#Hexo-Mermaid-插件" class="headerlink" title="Hexo Mermaid 插件"></a>Hexo Mermaid 插件</h2><blockquote><p><a href="https://www.npmjs.com/package/hexo-filter-mermaid-diagrams" target="_blank" rel="noopener">官方文档</a></p></blockquote><h3 id="Step1-Install-Package"><a href="#Step1-Install-Package" class="headerlink" title="Step1 Install Package"></a>Step1 Install Package</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add hexo-filter-mermaid-diagrams</span><br></pre></td></tr></table></figure><blockquote><p>In your blog floder, not hexo floder</p></blockquote><h3 id="Step2-Edit-Config"><a href="#Step2-Edit-Config" class="headerlink" title="Step2 Edit Config"></a>Step2 Edit Config</h3><p>After installed, you should edit hexo config file: <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mermaid chart</span></span><br><span class="line"><span class="attr">mermaid:</span> <span class="comment">## mermaid url https://github.com/knsv/mermaid</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># default true</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">"7.1.2"</span> <span class="comment"># default v7.1.2</span></span><br><span class="line">  <span class="attr">options:</span>  <span class="comment"># find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span></span><br><span class="line">    <span class="comment">#startOnload: true  // default true</span></span><br></pre></td></tr></table></figure><blockquote><p>❗️❗️❗️Notice: if you want to use ‘Class diagram’, please edit your ‘_config.yml’ file, set <code>external_link: false</code>. - hexo bug.</p></blockquote><h3 id="Step3-include-mermaid-js-in-pug-or-ejs"><a href="#Step3-include-mermaid-js-in-pug-or-ejs" class="headerlink" title="Step3 include mermaid.js in pug or ejs"></a>Step3 include mermaid.js in pug or ejs</h3><p>After edited <code>_config.yml</code>, you shou edit your blog page component like <code>after_footer.pug</code> , <code>after-footer.ejs</code> or <code>swig</code>.</p><p>Where is it?</p><p>Open your theme folder, you can see the <code>layout</code> folder, open it and then you could see it.</p><p>Okey! if your blog is used pug, you can copy the below codes in <code>after_footer.pug</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if theme.mermaid.enable &#x3D;&#x3D; true</span><br><span class="line">  script(type&#x3D;&#39;text&#x2F;javascript&#39;, id&#x3D;&#39;maid-script&#39; mermaidoptioins&#x3D;theme.mermaid.options src&#x3D;&#39;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&#39;+ theme.mermaid.version + &#39;&#x2F;dist&#x2F;mermaid.min.js&#39; + &#39;?v&#x3D;&#39; + theme.version)</span><br><span class="line">  script.</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      var options &#x3D; JSON.parse(document.getElementById(&#39;maid-script&#39;).getAttribute(&#39;mermaidoptioins&#39;));</span><br><span class="line">      mermaid.initialize(options);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>after-footer.ejs</code> should copy below codes:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.mermaid.enable) &#123; %&gt;</span><br><span class="line">  &lt;script src&#x3D;&#39;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&lt;%&#x3D; theme.mermaid.version %&gt;&#x2F;dist&#x2F;mermaid.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      mermaid.initialize(&#123;theme: &#39;forest&#39;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>swig template engine:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.mermaid.enable %&#125;</span><br><span class="line">  &lt;script src&#x3D;&#39;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;&#x2F;dist&#x2F;mermaid.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      mermaid.initialize(&#123;&#123; JSON.stringify(theme.mermaid.options) &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo-Mermaid-插件&quot;&gt;&lt;a href=&quot;#Hexo-Mermaid-插件&quot; class=&quot;headerlink&quot; title=&quot;Hexo Mermaid 插件&quot;&gt;&lt;/a&gt;Hexo Mermaid 插件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a hr
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="blog.lovesora.pro/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>组件&amp;库 架构方案</title>
    <link href="blog.lovesora.pro/2018/12/28/fe/%E6%9E%B6%E6%9E%84/angular%20%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/"/>
    <id>blog.lovesora.pro/2018/12/28/fe/%E6%9E%B6%E6%9E%84/angular%20%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</id>
    <published>2018-12-28T16:22:22.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最原始方案"><a href="#最原始方案" class="headerlink" title="最原始方案"></a>最原始方案</h2><p>所有组件库各自独立维护，独立演进。<br>搭建私有<code>npm</code>，业务项目独立引用组件库对应版本。</p><ul><li>优势</li></ul><p>组件之间相互独立，各自互补相干。</p><ul><li>劣势</li></ul><p>组件库的研发比较麻烦，需要写独立demo。<br>如果在业务项目中发现组件库出现问题，调试极其麻烦。</p><ul><li><p>适用<br>大型团队，组件与业务彻底分离，各自独立演进。</p></li><li><p>不适用<br>小型团队使用成本极大，业务产出低。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;最原始方案&quot;&gt;&lt;a href=&quot;#最原始方案&quot; class=&quot;headerlink&quot; title=&quot;最原始方案&quot;&gt;&lt;/a&gt;最原始方案&lt;/h2&gt;&lt;p&gt;所有组件库各自独立维护，独立演进。&lt;br&gt;搭建私有&lt;code&gt;npm&lt;/code&gt;，业务项目独立引用组件库对应版本。
      
    
    </summary>
    
    
    
      <category term="架构" scheme="blog.lovesora.pro/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>记 `*ngIf` 生命周期导致的一个坑</title>
    <link href="blog.lovesora.pro/2018/09/19/fe/angular/%E6%9D%82%E6%96%87/lifecycle-ngif/"/>
    <id>blog.lovesora.pro/2018/09/19/fe/angular/%E6%9D%82%E6%96%87/lifecycle-ngif/</id>
    <published>2018-09-19T16:07:03.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h2><p><code>*ngIf</code> 中的 <code>ViewChild</code> 要在 <code>ngAfterViewInit</code> 生命周期钩子中才能拿到。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  condition = <span class="literal">true</span>;</span><br><span class="line">  <span class="meta">@ViewChild</span>(<span class="string">'div'</span>) div: ElementRef;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.div); <span class="comment">// undefined</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngAfterContentInit() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.div); <span class="comment">// undefined</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngAfterViewInit() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.div); <span class="comment">// ElementRef</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ng-container</span> *<span class="attr">ngIf</span>=<span class="string">"condition"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> #<span class="attr">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ng-container</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;情景&quot;&gt;&lt;a href=&quot;#情景&quot; class=&quot;headerlink&quot; title=&quot;情景&quot;&gt;&lt;/a&gt;情景&lt;/h2&gt;&lt;p&gt;&lt;code&gt;*ngIf&lt;/code&gt; 中的 &lt;code&gt;ViewChild&lt;/code&gt; 要在 &lt;code&gt;ngAfterViewInit&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Angualr 开源组件设计</title>
    <link href="blog.lovesora.pro/2018/09/10/fe/angular/%E7%BB%84%E4%BB%B6/ngx-os%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
    <id>blog.lovesora.pro/2018/09/10/fe/angular/%E7%BB%84%E4%BB%B6/ngx-os%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/</id>
    <published>2018-09-10T18:06:25.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>公司的技术展选择的是 <code>Angular</code> ，设计风格也是Google的 <code>Mateiral Design</code>。Goolge官方团队有提供一套Material Angular版本的组件库 <a href="https://material.angular.io" target="_blank" rel="noopener">material.angular.io</a>。但是国人的操作习惯与国外还是有一些区别，针对这部分业务，公司打算基于官方组件，封装一些自定义的组件，并且开源出来。这一过程当中，主要对以下几个方面做了一些考虑。希望能对大家的开源项目有所帮助。不足之处还望多多包含( ´ ▽ ` )。</p><blockquote><p><a href="https://github.com/petkit-io/ngx-os" target="_blank" rel="noopener">Github</a> 欢迎大家Star</p></blockquote><ul><li>Debug</li><li>Demo 及 Demo源代码</li><li>Build</li><li>Github开源</li><li>npm发布</li></ul><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/assets/images/angular/os/ngx-os-directory.png" alt="directory"></p><h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><p>Debug阶段主要考虑到的是路径引入问题，为了让 <code>Demo源代码</code> 能够和生产环境下的使用保持一致，在 <code>PROJECT_ROOT/tsconfig.json</code> (PROJECT_ROOT指项目根目录)中做了一些配置</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "compilerOptions": &#123;</span><br><span class="line">    "baseUrl": ".",</span><br><span class="line">    "paths": &#123;</span><br><span class="line">      "@petkit/*": [</span><br><span class="line">        <span class="string">"./src/lib/*"</span></span><br><span class="line">      ],</span><br><span class="line">      "demo/*": [</span><br><span class="line">        <span class="string">"./src/demo/*"</span></span><br><span class="line">      ],</span><br><span class="line">      "util/*": [</span><br><span class="line">        <span class="string">"./src/util/*"</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将所有 <code>@petkit/</code> 开头的路径引入转换至 <code>src/lib/</code> 下 </p><blockquote><p><a href="http://json.schemastore.org/tsconfig" target="_blank" rel="noopener">schema</a></p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NgxHighlightModule &#125; <span class="keyword">from</span> <span class="string">'@petkit/ngx-highlight'</span>;</span><br></pre></td></tr></table></figure><p>将被转换为</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NgxHighlightModule &#125; <span class="keyword">from</span> <span class="string">'PROJECT_ROOT/src/lib/ngx-highlight'</span>;</span><br></pre></td></tr></table></figure><h2 id="Demo-及-Demo源代码"><a href="#Demo-及-Demo源代码" class="headerlink" title="Demo 及 Demo源代码"></a>Demo 及 Demo源代码</h2><p>这里参考了Angualar Material官方团队的设计（此处Demo和Example概念与官方有出入，官方的示例代码是放在example目录下的，个人觉得都可以，只是项目已经配好了，就不想再去调整得与官方保持一致了）。</p><blockquote><p><a href="https://github.com/angular/material2/tree/master/src/material-examples" target="_blank" rel="noopener">material 2</a></p></blockquote><p>将所有demo目录下的文件作为静态资源，通过http请求源代码，使用 <code>ngx-highlight</code> 高亮语法。 <code>angular.json</code> 配置如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"projects"</span>: &#123;</span><br><span class="line">    <span class="attr">"example"</span>: &#123;</span><br><span class="line">      <span class="attr">"root"</span>: <span class="string">"."</span>,</span><br><span class="line">      <span class="attr">"sourceRoot"</span>: <span class="string">"src/example"</span>,</span><br><span class="line">      <span class="attr">"architect"</span>: &#123;</span><br><span class="line">        <span class="attr">"build"</span>: &#123;</span><br><span class="line">          <span class="attr">"options"</span>: &#123;</span><br><span class="line">            <span class="attr">"assets"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"glob"</span>: <span class="string">"**/*"</span>,</span><br><span class="line">                <span class="attr">"input"</span>: <span class="string">"src/demo"</span>,</span><br><span class="line">                <span class="attr">"output"</span>: <span class="string">"assets/demo"</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="string">"src/example/assets"</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：<code>sourceRoot</code> 是 <code>ng g *</code> 的相对路径</p></blockquote><p><code>demo</code> 与 <code>example</code> 同级，直接引入会报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;assets&quot;: [</span><br><span class="line">    &#x2F;&#x2F; Error: The src&#x2F;demo asset path must start with the project source root.</span><br><span class="line">    &quot;src&#x2F;demo&quot;,</span><br><span class="line">    &quot;src&#x2F;example&#x2F;assets&quot;</span><br><span class="line">  ]</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>demo会被当作静态资源输出至 <code>dist/example/assets/demo</code>，此时使用http请求对应路径文件即可。</p><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><p>这部分已经有现成的库 <code>ng packagr</code> 可以帮助我们直接打包了</p><blockquote><p><a href="https://github.com/ng-packagr/ng-packagr" target="_blank" rel="noopener">ng-packagr</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng-packagr -p ./src/**/package.json</span><br></pre></td></tr></table></figure><h2 id="Github-开源"><a href="#Github-开源" class="headerlink" title="Github 开源"></a>Github 开源</h2><p>针对 <code>lib</code> 下的源代码，采用 <code>git submodule</code> 的方式可以帮助我们更好地维护开源组件。</p><blockquote><p>关于 <code>git submodule</code> segmentfault 上有篇文章写得蛮不错的 <a href="https://segmentfault.com/a/1190000003076028" target="_blank" rel="noopener">git submodule</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add git@github.com:petkit-io/ngx-highlight.git src/lib/ngx-highlight</span><br></pre></td></tr></table></figure><h2 id="npm发布"><a href="#npm发布" class="headerlink" title="npm发布"></a>npm发布</h2><p><code>ng-packagr</code> 打包出来的代码便可以直接发布。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish path --access public;</span><br></pre></td></tr></table></figure><p>npm 上的 organization 需要加上 <code>--access public</code> 才能发布。每次发布完成后自动生成 <code>CHANGELOG</code>，打上新的版本号。</p><blockquote><p><a href="https://github.com/conventional-changelog/conventional-changelog" target="_blank" rel="noopener">conventional-changelog</a> 可以帮助我们自动生成Change Log<br><a href="https://github.com/marionebl/commitlint" target="_blank" rel="noopener">commitlint</a>可以帮助我们规范commit message</p></blockquote><h2 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h2><p><code>build</code> <code>github</code> <code>npm</code> 三个阶段可以通过脚本自动执行。<code>PROJECT_ROOT/bin/pub.sh</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line">libRoot=src/lib;</span><br><span class="line">distRoot=dist;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">buildLib</span></span>() &#123;</span><br><span class="line">  packagePath=<span class="variable">$1</span>;</span><br><span class="line"></span><br><span class="line">  npx ng-packagr -p <span class="variable">$packagePath</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">publishLib</span></span>() &#123;</span><br><span class="line">  libName=<span class="variable">$1</span>;</span><br><span class="line">  libPath=<span class="variable">$libRoot</span>/<span class="variable">$libName</span>;</span><br><span class="line"></span><br><span class="line">  buildLib <span class="variable">$libPath</span>/package.json;</span><br><span class="line">  npm publish <span class="variable">$distRoot</span>/<span class="variable">$libName</span> --access public;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$libPath</span>;</span><br><span class="line">  git add .;</span><br><span class="line">  git commit -m <span class="string">"chore(version): publish npmjs"</span> 1&gt;/dev/null 2&gt;&amp;1;</span><br><span class="line">  npm version patch;</span><br><span class="line">  git push;</span><br><span class="line">  git push --tags;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">publishLib <span class="variable">$1</span></span><br></pre></td></tr></table></figure><p><code>maidfile.md</code>：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## pub</span></span><br><span class="line"></span><br><span class="line">发布类库</span><br><span class="line">命令格式 <span class="code">`npx maid pub [lib-name]`</span></span><br><span class="line"></span><br><span class="line">e.g.</span><br><span class="line"><span class="bullet">- </span><span class="code">`npx maid pub ts-lib`</span></span><br><span class="line"><span class="bullet">- </span><span class="code">`npx maid pub ngx-material`</span></span><br><span class="line"></span><br><span class="line"><span class="code">```bash</span></span><br><span class="line"><span class="code">libName=$1</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">command="./bin/pub.sh $libName"</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">echo $command</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">$command</span></span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx maid pub ngx-highlight</span><br></pre></td></tr></table></figure><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>整体结构还有一些不完善的地方，希望大家多多提些建议，我们也会逐步改善。</p><blockquote><p><a href="https://github.com/petkit-io/ngx-os" target="_blank" rel="noopener">Github</a> Star Star Star 重要的事情说三遍o(≧v≦)o</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;公司的技术展选择的是 &lt;code&gt;Angular&lt;/code&gt; ，设计风格也是Google的 &lt;code&gt;Mateiral Design&lt;/code
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="os" scheme="blog.lovesora.pro/tags/os/"/>
    
  </entry>
  
  <entry>
    <title>Angular Route Reuse Strategy</title>
    <link href="blog.lovesora.pro/2018/09/06/fe/angular/%E6%9D%82%E6%96%87/route-reuse/"/>
    <id>blog.lovesora.pro/2018/09/06/fe/angular/%E6%9D%82%E6%96%87/route-reuse/</id>
    <published>2018-09-06T13:59:48.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>路由跳转的过程相当于是对组件的实例化，销毁过程。<br>这种机制能够应付绝大部分业务场景，但是在大部分管理系统当中，从 <code>列表 -&gt; 编辑 -&gt; 保存 -&gt; 返回列表</code> 该场景需要保存类似搜索，分页等状态数据，此时则需要使用 Angular 的 <code>RouteReuseStrategy</code> 贯穿路由状态并决定构建组件的方式。</p><h2 id="RouteReuseStrategy"><a href="#RouteReuseStrategy" class="headerlink" title="RouteReuseStrategy"></a>RouteReuseStrategy</h2><ul><li><code>shouldDetach</code> Determines if this route (and its subtree) should be detached to be reused later.</li><li><code>store</code> Stores the detached route.</li><li><code>shouldAttach</code> Determines if this route (and its subtree) should be reattached.</li><li><code>retrieve</code> Retrieves the previously stored route.</li><li><code>shouldReuseRoute</code> Determines if a route should be reused.</li></ul><p>执行顺序如下：</p><h2 id="SimpleReuseStrategy"><a href="#SimpleReuseStrategy" class="headerlink" title="SimpleReuseStrategy"></a>SimpleReuseStrategy</h2><p>网上很多例子在这里都是用的 <code>route.routeConfig.path</code> 作为 <code>key</code>。<br>如果不涉及到lazy load是不会有问题的，但是如果存在 <code>loadChildren</code>，那么<code>route.routeConfig.path</code>就有可能会重复。<br>于是我将 <code>key</code> 改为了 <code>route[&#39;_routerState&#39;].url</code> 取的绝对路径。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  RouteReuseStrategy,</span><br><span class="line">  DefaultUrlSerializer,</span><br><span class="line">  ActivatedRouteSnapshot,</span><br><span class="line">  DetachedRouteHandle</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> SimpleReuseStrategy <span class="keyword">implements</span> RouteReuseStrategy &#123;</span><br><span class="line"></span><br><span class="line">  _cacheRouters: &#123; [key: <span class="built_in">string</span>]: <span class="built_in">any</span> &#125; = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  shouldDetach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> !route.data.reuse;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>._cacheRouters[route[<span class="string">'_routerState'</span>].url] = &#123;</span><br><span class="line">      snapshot: route,</span><br><span class="line">      handle: handle</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  shouldAttach(route: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> !!<span class="keyword">this</span>._cacheRouters[route[<span class="string">'_routerState'</span>].url];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle &#123;</span><br><span class="line">    <span class="keyword">if</span> (!route.routeConfig || route.routeConfig.loadChildren || !<span class="keyword">this</span>._cacheRouters[route[<span class="string">'_routerState'</span>].url]) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._cacheRouters[route[<span class="string">'_routerState'</span>].url].handle;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="comment">// 同一路由时复用路由</span></span><br><span class="line">    <span class="keyword">return</span> future[<span class="string">'_routerState'</span>].url === curr[<span class="string">'_routerState'</span>].url;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注册策略到-forRoot-模块。"><a href="#注册策略到-forRoot-模块。" class="headerlink" title="注册策略到 forRoot 模块。"></a>注册策略到 <code>forRoot</code> 模块。</h2><blockquote><p>lazy laod 的 <code>forChild</code> 模块是无法注册的</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    RouterModule.forRoot(routes),</span><br><span class="line">  ],</span><br><span class="line">  providers: [&#123;</span><br><span class="line">    provide: RouteReuseStrategy,</span><br><span class="line">    useClass: SimpleReuseStrategy,</span><br><span class="line">  &#125;],</span><br><span class="line">  exports: [RouterModule]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="具体模块使用"><a href="#具体模块使用" class="headerlink" title="具体模块使用"></a>具体模块使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes: Routes = [&#123;</span><br><span class="line">  path: <span class="string">''</span>,</span><br><span class="line">  children: [&#123;</span><br><span class="line">    path: <span class="string">''</span>,</span><br><span class="line">    redirectTo: <span class="string">'list'</span>,</span><br><span class="line">  &#125;,  &#123;</span><br><span class="line">    path: <span class="string">'list'</span>,</span><br><span class="line">    component: ListComponent,</span><br><span class="line">    data: &#123;</span><br><span class="line">      reuse: <span class="literal">true</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    path: <span class="string">'detail/:id'</span>,</span><br><span class="line">    component: DetailComponent,</span><br><span class="line">  &#125;],</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://angular.cn/api/router/RouteReuseStrategy" target="_blank" rel="noopener">angular.cn</a></li><li><a href="https://segmentfault.com/a/1190000011430157#articleHeader1" target="_blank" rel="noopener">Angular路由复用策略</a></li><li><a href="https://segmentfault.com/a/1190000014944087" target="_blank" rel="noopener">Angular 5.0 学习8：Angular路由复用策略 (切换页面内容不丢失，保持原来状态)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;路由跳转的过程相当于是对组件的实例化，销毁过程。&lt;br&gt;这种机制能够应付绝大部分业务场景，但是在大部分管理系统当中，从 &lt;code&gt;列表 -
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="route" scheme="blog.lovesora.pro/tags/route/"/>
    
  </entry>
  
  <entry>
    <title>tsconfig 浅析</title>
    <link href="blog.lovesora.pro/2018/08/09/fe/typescript/tsconfig/"/>
    <id>blog.lovesora.pro/2018/08/09/fe/typescript/tsconfig/</id>
    <published>2018-08-09T11:24:58.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h3 id="相对-vs-非相对模块导入"><a href="#相对-vs-非相对模块导入" class="headerlink" title="相对 vs. 非相对模块导入"></a>相对 vs. 非相对模块导入</h3><p>根据模块引用是相对的还是非相对的，模块导入会以不同的方式解析。</p><p>相对导入是以/，./或../开头的。 下面是一些例子：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Entry <span class="keyword">from</span> <span class="string">"./components/Entry"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; DefaultHeaders &#125; <span class="keyword">from</span> <span class="string">"../constants/http"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"/mod"</span>;</span><br></pre></td></tr></table></figure><p>所有其它形式的导入被当作非相对的。 下面是一些例子：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> $ <span class="keyword">from</span> <span class="string">"jQuery"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">"@angular/core"</span>;</span><br></pre></td></tr></table></figure><p>相对导入在解析时是相对于导入它的文件，并且不能解析为一个外部模块声明。 你应该为你自己写的模块使用相对导入，这样能确保它们在运行时的相对位置。</p><p>非相对模块的导入可以相对于 <code>baseUrl</code> 或通过下文会讲到的路径映射来进行解析。 它们还可以被解析成 <a href="https://www.tslang.cn/docs/handbook/modules.html#ambient-modules" target="_blank" rel="noopener">外部模块声明</a>。 使用非相对路径来导入你的外部依赖</p><h3 id="路径映射"><a href="#路径映射" class="headerlink" title="路径映射"></a>路径映射</h3><p>有时模块不是直接放在<code>baseUrl</code>下面。 比如，充分 <code>&quot;jquery&quot;</code>模块地导入，在运行时可能被解释为 <code>&quot;node_modules/jquery/dist/jquery.slim.min.js&quot;</code>。加载器使用映射配置来将模块名映射到运行时的文件。</p><p>TypeScript编译器通过使用tsconfig.json文件里的”paths”来支持这样的声明映射。 下面是一个如何指定 jquery的”paths”的例子。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="string">"baseUrl"</span>: <span class="string">"."</span>, <span class="comment">// This must be specified if "paths" is.</span></span><br><span class="line">    <span class="string">"paths"</span>: &#123;</span><br><span class="line">      <span class="string">"jquery"</span>: [<span class="string">"node_modules/jquery/dist/jquery"</span>] <span class="comment">// 此处映射是相对于"baseUrl"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意<code>&quot;paths&quot;</code>是相对于<code>&quot;baseUrl&quot;</code>进行解析。 如果 <code>&quot;baseUrl&quot;</code>被设置成了除<code>&quot;.&quot;</code>外的其它值，比如<code>tsconfig.json</code>所在的目录，那么映射必须要做相应的改变。<br>如果你在上例中设置了 <code>&quot;baseUrl&quot;: &quot;./src&quot;</code>，那么<code>jquery</code>应该映射到<code>&quot;../node_modules/jquery/dist/jquery&quot;</code>。</p><h3 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h3><ul><li><a href="https://www.tslang.cn/docs/handbook/module-resolution.html" target="_blank" rel="noopener">tslang.cn</a></li><li><a href="https://zhuanlan.zhihu.com/p/21629069" target="_blank" rel="noopener">zhihu</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;相对-vs-非相对模块导入&quot;&gt;&lt;a href=&quot;#相对-vs-非相对模块导入&quot; class=&quot;headerlink&quot; title=&quot;相对 vs. 非相对模块导入&quot;&gt;&lt;/a&gt;相对 vs. 非相对模块导入&lt;/h3&gt;&lt;p&gt;根据模块引用是相对的还是非相对的，模块导入会以不
      
    
    </summary>
    
    
    
      <category term="ts" scheme="blog.lovesora.pro/tags/ts/"/>
    
  </entry>
  
  <entry>
    <title>Angular 组件开源架构</title>
    <link href="blog.lovesora.pro/2018/08/07/fe/angular/%E7%BB%84%E4%BB%B6/%E5%BC%80%E6%BA%90%E6%9E%B6%E6%9E%84/"/>
    <id>blog.lovesora.pro/2018/08/07/fe/angular/%E7%BB%84%E4%BB%B6/%E5%BC%80%E6%BA%90%E6%9E%B6%E6%9E%84/</id>
    <published>2018-08-07T11:18:27.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Common"><a href="#Common" class="headerlink" title="Common"></a>Common</h2><p><code>Common</code> 的定义是 <code>公共</code>，参考的 <code>angular</code>，所有开源组件公共的代码都放在这个项目中，包括两部分：</p><ul><li>ts</li><li>sass</li></ul><p>这部分定义了基于 <code>typescript</code> 的所有公共库，类似<code>lodash</code>，包含组件需要使用的公共的功能。目前包含以下部分：</p><ul><li>util</li><li>net</li><li>error</li><li>global</li></ul><p>代码最终会被编译成 <code>js</code>，并且包含 <code>*.d.ts</code>，无论是 <code>js</code> 还是 <code>ts</code> 项目都可引用。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  SearchArray,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@petkit/common'</span>;</span><br></pre></td></tr></table></figure><h2 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h2><p>这部分定义了基于 <code>sass</code> 的公共样式。目前包含以下部分：</p><ul><li>animation</li><li>icon</li><li>support</li><li>wechat</li><li>mp</li></ul><p>该部分样式针对不同平台（Web, PC,公众号,小程序等）做了兼容处理，需要在配置文件中配置，默认 <code>750</code> 占满屏幕宽度（类似微信小程序）。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// _theming.config.scss</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">'~@petkit/style/theming'</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$app-primary</span>: mat-palette(<span class="variable">$mat-cyan</span>);</span><br><span class="line"><span class="variable">$app-accent</span>: mat-palette(<span class="variable">$mat-orange</span>);</span><br><span class="line"><span class="variable">$app-warn</span>: mat-palette(<span class="variable">$mat-yellow</span>, <span class="number">700</span>, <span class="number">300</span>, <span class="number">900</span>);</span><br><span class="line"><span class="variable">$app-theme</span>: mat-light-theme(<span class="variable">$app-primary</span>, <span class="variable">$app-accent</span>, <span class="variable">$app-warn</span>);</span><br><span class="line"><span class="variable">$app-size</span>: size(wp);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Common&quot;&gt;&lt;a href=&quot;#Common&quot; class=&quot;headerlink&quot; title=&quot;Common&quot;&gt;&lt;/a&gt;Common&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Common&lt;/code&gt; 的定义是 &lt;code&gt;公共&lt;/code&gt;，参考的 &lt;code&gt;ang
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="open source" scheme="blog.lovesora.pro/tags/open-source/"/>
    
  </entry>
  
  <entry>
    <title>Angular 组件开源流程</title>
    <link href="blog.lovesora.pro/2018/08/07/fe/angular/%E7%BB%84%E4%BB%B6/%E5%BC%80%E6%BA%90/"/>
    <id>blog.lovesora.pro/2018/08/07/fe/angular/%E7%BB%84%E4%BB%B6/%E5%BC%80%E6%BA%90/</id>
    <published>2018-08-07T10:47:22.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Step-1-Github-创建组织和仓库"><a href="#Step-1-Github-创建组织和仓库" class="headerlink" title="Step 1. Github 创建组织和仓库"></a>Step 1. <code>Github</code> 创建<a href="https://github.com/account/organizations/new" target="_blank" rel="noopener">组织</a>和<a href="https://github.com/new" target="_blank" rel="noopener">仓库</a></h2><h2 id="Step-2-npmjs-创建组织"><a href="#Step-2-npmjs-创建组织" class="headerlink" title="Step 2. npmjs 创建组织"></a>Step 2. <code>npmjs</code> 创建组织</h2><h2 id="Step-3-clone-boilerplate"><a href="#Step-3-clone-boilerplate" class="headerlink" title="Step 3. clone boilerplate"></a>Step 3. clone <code>boilerplate</code></h2><h2 id="Step-4-执行pub"><a href="#Step-4-执行pub" class="headerlink" title="Step 4. 执行pub"></a>Step 4. 执行pub</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Step-1-Github-创建组织和仓库&quot;&gt;&lt;a href=&quot;#Step-1-Github-创建组织和仓库&quot; class=&quot;headerlink&quot; title=&quot;Step 1. Github 创建组织和仓库&quot;&gt;&lt;/a&gt;Step 1. &lt;code&gt;Github&lt;/
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="component" scheme="blog.lovesora.pro/tags/component/"/>
    
      <category term="open source" scheme="blog.lovesora.pro/tags/open-source/"/>
    
  </entry>
  
  <entry>
    <title>Sketch Useful Shortcut</title>
    <link href="blog.lovesora.pro/2018/08/03/design/sketch/shortcut/"/>
    <id>blog.lovesora.pro/2018/08/03/design/sketch/shortcut/</id>
    <published>2018-08-03T15:24:29.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Duplicate"><a href="#Duplicate" class="headerlink" title="Duplicate"></a>Duplicate</h2><table><thead><tr><th align="left">usage</th><th align="left">command</th></tr></thead><tbody><tr><td align="left">复制样式</td><td align="left">Option + Command + C</td></tr><tr><td align="left">粘贴样式</td><td align="left">Option + Command + V</td></tr><tr><td align="left">复制</td><td align="left">Ctrl + Command + arrow</td></tr><tr><td align="left">自定义复制</td><td align="left">Ctrl + Shift + Command + arrow</td></tr></tbody></table><h2 id="Groups"><a href="#Groups" class="headerlink" title="Groups"></a>Groups</h2><table><thead><tr><th align="left">usage</th><th align="left">command</th></tr></thead><tbody><tr><td align="left">Bring Forward</td><td align="left">Alt + Cmd + ↑</td></tr><tr><td align="left">Bring to Front</td><td align="left">Control + Alt + Cmd + ↑</td></tr><tr><td align="left">Send Backward</td><td align="left">Alt + Cmd + ↓</td></tr><tr><td align="left">Sent to Back</td><td align="left">Control + Alt + Cmd + ↓</td></tr><tr><td align="left">Select Parent Artboard</td><td align="left">Esc</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Duplicate&quot;&gt;&lt;a href=&quot;#Duplicate&quot; class=&quot;headerlink&quot; title=&quot;Duplicate&quot;&gt;&lt;/a&gt;Duplicate&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;usage&lt;/
      
    
    </summary>
    
    
    
      <category term="sketch" scheme="blog.lovesora.pro/tags/sketch/"/>
    
      <category term="shortcut" scheme="blog.lovesora.pro/tags/shortcut/"/>
    
  </entry>
  
  <entry>
    <title>Centos 7 安装SSL</title>
    <link href="blog.lovesora.pro/2018/07/27/linux/centos/ssl/"/>
    <id>blog.lovesora.pro/2018/07/27/linux/centos/ssl/</id>
    <published>2018-07-27T10:07:02.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装epel-release"><a href="#安装epel-release" class="headerlink" title="安装epel-release"></a>安装epel-release</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line"></span><br><span class="line">yum search python2-certbot-nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有对应的package</span></span><br><span class="line">yum reinstall -y epel-release</span><br><span class="line">yum update -y</span><br></pre></td></tr></table></figure><h2 id="安装certbot"><a href="#安装certbot" class="headerlink" title="安装certbot"></a>安装certbot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install certbot python2-certbot-nginx</span><br></pre></td></tr></table></figure><h2 id="生成ssl"><a href="#生成ssl" class="headerlink" title="生成ssl"></a>生成ssl</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据提示选择即可</span></span><br><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure><h2 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h2><ol><li><p>找不到 <code>nginx</code> 命令<br>解决方案：将nginx命令所在目录添加至环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">PATH=<span class="variable">$PATH</span>:/usr/sbin;</span><br></pre></td></tr></table></figure></li><li><p>浏览器无法访问 <code>https://xxxx</code><br>解决方案：将443端口添加至防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/firewalld/services/ssh.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># add rule</span></span><br><span class="line">&lt;port protocol=<span class="string">"tcp"</span> port=<span class="string">"443"</span>/&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://certbot.eff.org/lets-encrypt/centosrhel7-nginx" target="_blank" rel="noopener">certbot</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装epel-release&quot;&gt;&lt;a href=&quot;#安装epel-release&quot; class=&quot;headerlink&quot; title=&quot;安装epel-release&quot;&gt;&lt;/a&gt;安装epel-release&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="nginx" scheme="blog.lovesora.pro/tags/nginx/"/>
    
      <category term="centos" scheme="blog.lovesora.pro/tags/centos/"/>
    
      <category term="ssl" scheme="blog.lovesora.pro/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab Docker安装</title>
    <link href="blog.lovesora.pro/2018/07/19/vcs/gitlab/install/"/>
    <id>blog.lovesora.pro/2018/07/19/vcs/gitlab/install/</id>
    <published>2018-07-19T15:01:57.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-GitLab"><a href="#安装-GitLab" class="headerlink" title="安装 GitLab"></a>安装 <code>GitLab</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitlab</span><br></pre></td></tr></table></figure><h2 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach \</span><br><span class="line">  --hostname gitlab.example.com \</span><br><span class="line">  --env GITLAB_OMNIBUS_CONFIG=<span class="string">"external_url 'http://gitlab.example.com';"</span> \</span><br><span class="line">  --publish 443:443 --publish 8000:80 --publish 22:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume /srv/gitlab/config:/etc/gitlab \</span><br><span class="line">  --volume /srv/gitlab/logs:/var/<span class="built_in">log</span>/gitlab \</span><br><span class="line">  --volume /srv/gitlab/data:/var/opt/gitlab \</span><br><span class="line">  gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure><h2 id="配置-Nginx-反向代理"><a href="#配置-Nginx-反向代理" class="headerlink" title="配置 Nginx 反向代理"></a>配置 <code>Nginx</code> 反向代理</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/nginx/conf.d/gitlab.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> gitlab.example.com;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">access_log</span>  /var/log/nginx/gitlab.access.log  main;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8000;</span><br><span class="line">    <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><p>第一次访问 <code>gitlab.example.com</code> 会提示输入密码，用户名默认是 <code>root</code>。</p><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><h3 id="docker0-iptables-No-chain-target-match-by-that-name"><a href="#docker0-iptables-No-chain-target-match-by-that-name" class="headerlink" title="docker0: iptables: No chain/target/match by that name"></a><code>docker0: iptables: No chain/target/match by that name</code></h3><p>重启docker即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://docs.gitlab.com/omnibus/docker/" target="_blank" rel="noopener">官方文档</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-GitLab&quot;&gt;&lt;a href=&quot;#安装-GitLab&quot; class=&quot;headerlink&quot; title=&quot;安装 GitLab&quot;&gt;&lt;/a&gt;安装 &lt;code&gt;GitLab&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="gitlab" scheme="blog.lovesora.pro/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>GitLab CI/CD Runner 入门</title>
    <link href="blog.lovesora.pro/2018/07/19/vcs/gitlab/runner/"/>
    <id>blog.lovesora.pro/2018/07/19/vcs/gitlab/runner/</id>
    <published>2018-07-19T14:05:56.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<p>我自己用的 <code>Centos 7 x64</code> ，一下流程都是以 <code>Centos 7 x64</code> <code>roor</code>权限为基础的</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p><a href="https://docs.gitlab.com/runner/install/linux-manually.html" target="_blank" rel="noopener">Linux手动安装</a><br><a href="https://docs.gitlab.com/runner/install/docker.html" target="_blank" rel="noopener">使用Docker</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash</span><br><span class="line">yum install gitlab-runner</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><p><a href="https://docs.gitlab.com/runner/commands/README.html#gitlab-runner-install" target="_blank" rel="noopener">官方Runner命令手册</a></p></blockquote><h3 id="1-注册runner"><a href="#1-注册runner" class="headerlink" title="1. 注册runner"></a>1. 注册runner</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># register</span></span><br><span class="line">gitlab-runner register</span><br><span class="line"></span><br><span class="line"><span class="comment"># register</span></span><br><span class="line">gitlab-runner register \</span><br><span class="line">  --name runner-name \</span><br><span class="line">  --url http://gitlab.example.com \</span><br><span class="line">  --registration-token my-registration-token \</span><br><span class="line">  --executor shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看runner列表</span></span><br><span class="line">gitlab-runner list</span><br></pre></td></tr></table></figure><blockquote><p>这里遇到了个坑，不添加 <code>--executor</code> 会报错<br><code>running register from command line,</code>–executor X<code>results in:</code>ERROR: Invalid executor specified``<br>但是官方文档里却没有说必须要加</p></blockquote><h3 id="2-启动服务"><a href="#2-启动服务" class="headerlink" title="2. 启动服务"></a>2. 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装服务</span></span><br><span class="line">gitlab-runner install runner-name --user root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">gitlab-runner start runner-name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务启动状态</span></span><br><span class="line">gitlab-runner status runner-name</span><br></pre></td></tr></table></figure><h3 id="3-配置runner-tag"><a href="#3-配置runner-tag" class="headerlink" title="3. 配置runner tag"></a>3. 配置runner tag</h3><p>先说一下 <code>Specific Runners</code> 。</p><p>这个tag配置是用来 <code>标识</code> 该 <code>runner</code> 的。</p><p>进入<code>[Settings -&gt; CI/CD -&gt; Specific Runners]</code> ，点击编辑按钮(这个按钮我是找了好久才找到)，添加一个tag，在job中可以通过指定tags来定位到对应的 <code>Runner</code></p><p><img src="/assets/images/gitlab/runners.jpg" alt="runners"></p><p><img src="/assets/images/gitlab/runners-tag.jpg" alt="runners tag"></p><p>关于 <code>jobs</code> 这里有几篇很不错的文章，我就不多赘述了。</p><blockquote><p><a href="https://docs.gitlab.com/ce/ci/yaml/README.html#stages" target="_blank" rel="noopener">官方文档</a><br><a href="https://segmentfault.com/a/1190000011890710" target="_blank" rel="noopener">gitlab-ci配置详解(二)</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我自己用的 &lt;code&gt;Centos 7 x64&lt;/code&gt; ，一下流程都是以 &lt;code&gt;Centos 7 x64&lt;/code&gt; &lt;code&gt;roor&lt;/code&gt;权限为基础的&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlin
      
    
    </summary>
    
    
    
      <category term="gitlab" scheme="blog.lovesora.pro/tags/gitlab/"/>
    
      <category term="ci" scheme="blog.lovesora.pro/tags/ci/"/>
    
  </entry>
  
  <entry>
    <title>函数式编程浅析</title>
    <link href="blog.lovesora.pro/2018/07/05/fe/rxjs/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <id>blog.lovesora.pro/2018/07/05/fe/rxjs/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</id>
    <published>2018-07-05T17:03:45.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令式-和-声明式"><a href="#命令式-和-声明式" class="headerlink" title="命令式 和 声明式"></a><code>命令式</code> 和 <code>声明式</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令式</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addOne</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> results = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    results.push(arr[i] + <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> results</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(addOne([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">double</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> results = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    results.push(arr[i] * <span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> results</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(double([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]));</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明式</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addOne</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.map(<span class="function"><span class="params">item</span> =&gt;</span> item + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(addOne([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">double</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.map(<span class="function"><span class="params">item</span> =&gt;</span> item * <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> oneArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> anotherArray = double(oneArray);</span><br><span class="line"><span class="comment">// anotherArray的内容为[2, 4, 6]</span></span><br><span class="line"><span class="comment">// oneArray的内容依然是[1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(oneArray);</span><br><span class="line"><span class="built_in">console</span>.log(anotherArray);</span><br></pre></td></tr></table></figure><h2 id="纯函数-引用透明度Referential-Transparency"><a href="#纯函数-引用透明度Referential-Transparency" class="headerlink" title="纯函数(引用透明度Referential Transparency)"></a>纯函数(引用透明度Referential Transparency)</h2><p><strong>纯函数</strong></p><ul><li>函数的执⾏过程完全由输⼊参数决定，不会受除参数之外的任何数据影响</li><li>函数不会修改任何外部状态，⽐如修改全局变量或传⼊的参数对象</li></ul><p><strong>非纯函数</strong></p><ul><li>改变了参数</li><li>改变了全局变量</li><li>DOM或者AJAX操作</li><li>读取用户输入，抛出异常</li></ul><h2 id="数据不可变-Immutable"><a href="#数据不可变-Immutable" class="headerlink" title="数据不可变(Immutable)"></a>数据不可变(Immutable)</h2><ul><li>数据一旦产生，就不可以发生变化（Immutable）。</li></ul><p>es6中的<code>const</code>只是规定了变量不可发生变化，但是变量引用的对象自身可以改变。</p><h2 id="发展历史"><a href="#发展历史" class="headerlink" title="发展历史"></a>发展历史</h2><ul><li>函数式编程想要实现需要有一层软件模拟来实现数学家们设想的模型，但是在当时的硬件条件下是不被允许的。</li><li>硬件的飞速发展，性能的大幅提升，让开发者们开始关注软件的可维护性，可测试性。</li><li>函数式编程却能够让⼤部 分开发者不需要操⼼任务处理，所以⾮常适合分布式计算的场景</li></ul><h2 id="面向对象-和-函数式"><a href="#面向对象-和-函数式" class="headerlink" title="面向对象 和 函数式"></a><code>面向对象</code> 和 <code>函数式</code></h2><p>面向对象</p><p>优点</p><ul><li>因为通过定义类的⽅法，可以控 制对数据的操作。</li></ul><p>缺陷</p><ul><li>⾯向对象编程提供了⼀种持续编写烂 代码的⽅式，它让你通过⼀系列补丁来拼凑程序。</li><li>不知道对象是如何变为当前状态的，因为每一个方法都有可能修改状态。无法预知如果修改了当前状态会导致哪些地方发生变化。</li></ul><p>函数式</p><p>优点</p><ul><li>声明式，纯函数，数据不可变。</li></ul><p>缺点</p><ul><li>难度，性能</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命令式-和-声明式&quot;&gt;&lt;a href=&quot;#命令式-和-声明式&quot; class=&quot;headerlink&quot; title=&quot;命令式 和 声明式&quot;&gt;&lt;/a&gt;&lt;code&gt;命令式&lt;/code&gt; 和 &lt;code&gt;声明式&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;high
      
    
    </summary>
    
    
    
      <category term="函数式编程" scheme="blog.lovesora.pro/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Mysql Guide</title>
    <link href="blog.lovesora.pro/2018/07/05/be/spring-boot/mysql/"/>
    <id>blog.lovesora.pro/2018/07/05/be/spring-boot/mysql/</id>
    <published>2018-07-05T15:57:03.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>主要是 <code>spring-boot-starter-data-jpa</code> 和 <code>mysql-connector-java</code> 。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gs-mysql-data<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- JPA Data (We are going to use Repositories, Entities, Hibernate, etc...) --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Use MySQL Connector-J --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><p>打开文件<code>application.properties</code>，添加以下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;db_example</span><br><span class="line">spring.datasource.username&#x3D;springuser</span><br><span class="line">spring.datasource.password&#x3D;ThePassword</span><br></pre></td></tr></table></figure><h2 id="添加实体-Entity-映射"><a href="#添加实体-Entity-映射" class="headerlink" title="添加实体(@Entity)映射"></a>添加实体(<code>@Entity</code>)映射</h2><p><code>src/main/java/hello/User.java</code></p><p><strong>注意：</strong>如果id是主键则将<code>@GeneratedValue(strategy=GenerationType.AUTO)</code>改为<code>@GeneratedValue(strategy=GenerationType.IDENTITY)</code>。</p><blockquote><p><a href="https://blog.csdn.net/danchaofan0534/article/details/53608832" target="_blank" rel="noopener">hibernate在数据库生成hibernate_sequence表问题</a></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span> <span class="comment">// This tells Hibernate to make a table out of this class</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Id</span></span><br><span class="line">  <span class="meta">@GeneratedValue</span>(strategy=GenerationType.AUTO)</span><br><span class="line">  <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> email;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.email = email;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建仓库，用来操作数据库"><a href="#创建仓库，用来操作数据库" class="headerlink" title="创建仓库，用来操作数据库"></a>创建仓库，用来操作数据库</h2><p><code>src/main/java/hello/UserRepository.java</code></p><p><code>CrudRepository</code>通过<code>@Autowired</code>引用会自动实现crud操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.repository.CrudRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hello.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This will be AUTO IMPLEMENTED by Spring into a Bean called userRepository</span></span><br><span class="line"><span class="comment">// CRUD refers Create, Read, Update, Delete</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">CrudRepository</span>&lt;<span class="title">User</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h2><p><code>src/main/java/hello/MainController.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hello.User;</span><br><span class="line"><span class="keyword">import</span> hello.UserRepository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>    <span class="comment">// This means that this class is a Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(path=<span class="string">"/demo"</span>) <span class="comment">// This means URL's start with /demo (after Application path)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainController</span> </span>&#123;</span><br><span class="line"><span class="meta">@Autowired</span> <span class="comment">// This means to get the bean called userRepository</span></span><br><span class="line">           <span class="comment">// Which is auto-generated by Spring, we will use it to handle the data</span></span><br><span class="line"><span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(path=<span class="string">"/add"</span>) <span class="comment">// Map ONLY GET Requests</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">String <span class="title">addNewUser</span> <span class="params">(@RequestParam String name</span></span></span><br><span class="line"><span class="function"><span class="params">, @RequestParam String email)</span> </span>&#123;</span><br><span class="line"><span class="comment">// @ResponseBody means the returned String is the response, not a view name</span></span><br><span class="line"><span class="comment">// @RequestParam means it is a parameter from the GET or POST request</span></span><br><span class="line"></span><br><span class="line">User n = <span class="keyword">new</span> User();</span><br><span class="line">n.setName(name);</span><br><span class="line">n.setEmail(email);</span><br><span class="line">userRepository.save(n);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Saved"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(path=<span class="string">"/all"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">Iterable&lt;User&gt; <span class="title">getAllUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// This returns a JSON or XML with the users</span></span><br><span class="line"><span class="keyword">return</span> userRepository.findAll();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Summery"><a href="#Summery" class="headerlink" title="Summery"></a>Summery</h2><ol><li>创建操作数据库的Repository</li></ol><ul><li>类名就是表名</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">CrudRepository</span>&lt;<span class="title">User</span>, <span class="title">Long</span>&gt; </span>&#123; &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建Entity</li></ol><ul><li>不需要生成构造函数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注解实体</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="comment">// 注解主键</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="comment">// 注解主键的创建方式</span></span><br><span class="line"><span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://spring.io/guides/gs/accessing-data-mysql/" target="_blank" rel="noopener">Accessing data with MySQL</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h2&gt;&lt;p&gt;主要是 &lt;code&gt;spring-boot-starter-data-jpa&lt;/code&gt; 和 &lt;code&gt;mysql-co
      
    
    </summary>
    
    
    
      <category term="spring boot" scheme="blog.lovesora.pro/tags/spring-boot/"/>
    
      <category term="mysql" scheme="blog.lovesora.pro/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Building a RESTful Web Service</title>
    <link href="blog.lovesora.pro/2018/07/05/be/spring-boot/beginner/"/>
    <id>blog.lovesora.pro/2018/07/05/be/spring-boot/beginner/</id>
    <published>2018-07-05T10:14:42.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><code>idea -&gt; new project -&gt; Spring Initializr -&gt; check web/web dependency -&gt; finish</code></p><h2 id="创建VO"><a href="#创建VO" class="headerlink" title="创建VO"></a>创建VO</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sora.rest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Greeting</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Greeting</span><span class="params">(<span class="keyword">long</span> id, String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sora.rest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicLong;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GreetingController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String template = <span class="string">"Hello, %s! Your id is %s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AtomicLong counter = <span class="keyword">new</span> AtomicLong();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Greeting <span class="title">greeting</span><span class="params">(@RequestParam(value = <span class="string">"/greeting"</span>, defaultValue = <span class="string">"world"</span>)</span> String name) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Greeting(counter.incrementAndGet(), String.format(template, name, counter.get()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>Press <code>Option + Control + D</code> ，编辑配置，如图所示</p><p><img src="/assets/images/spring/debug-configuration.jpg" alt="configuration"></p><p>再次按下 <code>Option + Control + D</code> ，选择刚才配置的spring boot，启动。</p><h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><p>打开终端，进入项目目录，执行 <code>./mvnw clean package</code></p><h2 id="部署执行"><a href="#部署执行" class="headerlink" title="部署执行"></a>部署执行</h2><ol><li>安装jre</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk</span><br></pre></td></tr></table></figure><ol start="2"><li>将 <code>target</code> 目录下的 <code>jar</code> 文件copy至服务器，执行 <code>java -jar xxxx.jar</code>即可。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp target/xxx.jar user@ip:xxx.jar</span><br><span class="line">java -jar xxx.jar</span><br></pre></td></tr></table></figure><h2 id="Summery"><a href="#Summery" class="headerlink" title="Summery"></a>Summery</h2><ol><li>创建REST项目需要添加 <code>spring-boot-starter-web</code> 依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>通过注解的方式关联API请求</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 映射路径，方法，默认值等</span></span><br><span class="line"><span class="meta">@RequestMapping</span></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="meta">@PutMapping</span></span><br><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 映射参数</span></span><br><span class="line"><span class="meta">@RequestParam</span></span><br><span class="line"><span class="meta">@RequestBody</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 映射返回值</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><p>-<a href="https://linuxize.com/post/install-java-on-centos-7/" target="_blank" rel="noopener">How to install Java on CentOS 7</a><br>-<a href="http://spring.io/guides/gs/rest-service/#initial" target="_blank" rel="noopener">Building a RESTful Web Service</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建项目&quot;&gt;&lt;a href=&quot;#创建项目&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目&lt;/h2&gt;&lt;p&gt;&lt;code&gt;idea -&amp;gt; new project -&amp;gt; Spring Initializr -&amp;gt; che
      
    
    </summary>
    
    
    
      <category term="spring boot" scheme="blog.lovesora.pro/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>IOS移动端兼容性</title>
    <link href="blog.lovesora.pro/2018/07/03/fe/mobile/ios%E5%85%BC%E5%AE%B9/"/>
    <id>blog.lovesora.pro/2018/07/03/fe/mobile/ios%E5%85%BC%E5%AE%B9/</id>
    <published>2018-07-03T20:40:43.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Safari如何阻止“橡皮筋效果”？"><a href="#Safari如何阻止“橡皮筋效果”？" class="headerlink" title="Safari如何阻止“橡皮筋效果”？"></a>Safari如何阻止“橡皮筋效果”？</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//阻止默认的处理方式(阻止下拉滑动的效果)</span></span><br><span class="line">  e.preventDefault();</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="comment">//passive 参数不能省略，用来兼容ios和android</span></span><br><span class="line">  passive: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>Refs</strong></p><ul><li><a href="https://link.zhihu.com/?target=https%3A//segmentfault.com/a/1190000014134234">阻止微信浏览器下拉滑动效果（ios11.3 橡皮筋效果）</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Safari如何阻止“橡皮筋效果”？&quot;&gt;&lt;a href=&quot;#Safari如何阻止“橡皮筋效果”？&quot; class=&quot;headerlink&quot; title=&quot;Safari如何阻止“橡皮筋效果”？&quot;&gt;&lt;/a&gt;Safari如何阻止“橡皮筋效果”？&lt;/h2&gt;&lt;figure c
      
    
    </summary>
    
    
    
      <category term="mobile" scheme="blog.lovesora.pro/tags/mobile/"/>
    
      <category term="compat" scheme="blog.lovesora.pro/tags/compat/"/>
    
  </entry>
  
  <entry>
    <title>2018 年中总结</title>
    <link href="blog.lovesora.pro/2018/06/29/work/summary/2018%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93/"/>
    <id>blog.lovesora.pro/2018/06/29/work/summary/2018%E5%B9%B4%E4%B8%AD%E6%80%BB%E7%BB%93/</id>
    <published>2018-06-29T14:51:40.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>转眼18年已经过半，到公司已经快一年了。从年初到现在的这半年间切实体会到了什么叫做痛并快乐着。从做寄养开始，压力就一直伴随在身边。用新技术处理新业务这一选择，直接导致我们前端开发人员一度崩坏。但是，自己做出的选择，含着泪也要把它搞定！不过，现在回想起来，那真的是一段弥足珍贵的体验，同事的鼓励和领导的宽容，让我坚持了下去。如果不一鼓作气往前走，那么自己永远迈不出那一步。这股魄力成为了我人生中宝贵的一笔财富。</p><h2 id="主要工作"><a href="#主要工作" class="headerlink" title="主要工作"></a>主要工作</h2><p>这半年来主要工作都集中在了angular的应用上，从做猫窝开始时的基础试运行，到后来做寄养开始的正式技术迁移，大体成果如下：</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>核心思想是分层架构，层内独立，层间通过接口通信。</p><ul><li><code>lib</code> 公共ts库，所有项目通用<ul><li>net</li><li>util</li><li>error</li><li>pipe</li></ul></li><li><code>style</code> 公共样式库，所有项目通用<ul><li>material-theming</li><li>icon</li><li>animation</li><li>support</li><li>plugin</li><li>mobile</li><li>wechat</li><li>mini-program</li><li>pc</li></ul></li><li><code>matrial</code> angular material库<ul><li>amap</li><li>calendar</li><li>card<ul><li>check</li><li>delete</li><li>loading</li></ul></li><li>date-range-picker</li><li>dialog<ul><li>confirm</li><li>success</li><li>table</li></ul></li><li>layout</li><li>loading</li><li>nav</li><li>table</li><li>tree</li><li>upload</li></ul></li><li><code>flux</code> pc端数据层</li><li><code>redux</code> 移动端数据层</li><li><code>common</code> 原子业务层，微服务基础</li><li><code>saas</code> 聚合业务层</li></ul><h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><blockquote><p>AMD -&gt; ESM</p></blockquote><p>在angularjs时期，我们是用的AMD(requirejs)模块化方案，解决了<code>按需加载</code>问题，但是随着构建工具（gulp，webpack，rollup等）的不断发展，ESM逐渐成为主流。Angular 框架本身使用的TS，其模块化方案是ESM的超集。</p><h3 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h3><blockquote><p>directive -&gt; Component</p></blockquote><p>angularjs中使用的<code>directive</code>作为组件化的基础，而在angular中则是使用 <code>Module</code>，<code>Component</code>, <code>Directive</code> 来适用不用的组件化场景。</p><h3 id="规范化"><a href="#规范化" class="headerlink" title="规范化"></a>规范化</h3><blockquote><p>htmlhint, stylelint, eslint, tslint</p></blockquote><p>使用语言对应的lint插件来规范代码风格，保证代码的可读性和一致性。</p><blockquote><p>git flow</p></blockquote><p>使用git flow分支管理模型，让多人协作，分支管理变得清晰有序。</p><h3 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h3><p>PC端，移动端，小程序使用同一套架构设计。</p><ul><li><code>bin</code>中存放了项目相关shell脚本</li><li><code>dist</code>编译后文件所在目录</li><li><code>projects</code>目录存放了所有库项目，负责独立的业务。</li><li><code>src</code>项目源代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">▾ bin&#x2F;</span><br><span class="line">▸ dist&#x2F;</span><br><span class="line">▸ node_modules&#x2F;</span><br><span class="line">▾ projects&#x2F;</span><br><span class="line">  ▸ common&#x2F;</span><br><span class="line">  ▸ flux&#x2F;</span><br><span class="line">  ▸ lib&#x2F;</span><br><span class="line">  ▸ material&#x2F;</span><br><span class="line">▾ src&#x2F;</span><br><span class="line">  ▸ app&#x2F;</span><br><span class="line">  ▸ assets&#x2F;</span><br><span class="line">  ▸ environments&#x2F;</span><br><span class="line">  ▸ style&#x2F;</span><br></pre></td></tr></table></figure><h2 id="经验教训"><a href="#经验教训" class="headerlink" title="经验教训"></a>经验教训</h2><h3 id="时间评估"><a href="#时间评估" class="headerlink" title="时间评估"></a>时间评估</h3><p>细节与依赖都需要自己不断去挖掘才能考虑得详细，如果只是想当然的评估，那么事情的结果往往会变得很糟糕。</p><h3 id="三个臭皮匠抵过一个诸葛亮"><a href="#三个臭皮匠抵过一个诸葛亮" class="headerlink" title="三个臭皮匠抵过一个诸葛亮"></a>三个臭皮匠抵过一个诸葛亮</h3><p>在使用新技术的过程中，经常闭门造车，导致自己走了很多弯路。以后遇到类似问题一定要多与别人讨论。</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>这一年做了太多的东西，却思考得太少，没有理解到技术的原理，深深地陷入了码农深渊，不知道为什么这么做，为什么这样设计。每次从需求到研发，都是拿着设计图，思考实现这个东西要怎么做，时间可控不，要花多少时间，有什么风险，需要什么依赖，哪些东西可以复用等等。但是，产品初衷是什么？解决了用户什么刚需？为什么设计师要这样子设计？后端数据库怎么设计的？为什么要给这样的数据结构？这些往往难以接触，即使有机会了解，也不太愿意花时间去做。很多时候都不清除源头，就开始草草动工，只着眼于自己领域的实现，结果往往就是各种返工。在以后的研发中，一定不能把自己仅仅定位为“前端”工程师，应当从更为宏观，更为根本的角度去考虑事情。</p><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>目前单元测试已经有了眉目，使用angular官方提供的 <code>karma</code> 和 <code>jasmine</code>。</p><h3 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h3><p>这一部分是目前最为薄弱的一环，当业务达到一定复杂度时，会发现越来越多的任务都是水墨功夫，流程都是一摸一样，无非相关数据有所区别，自动化工具可以帮助我们快速创建一系列相关文件和代码，提高生产效率。</p><h3 id="异常上报与监控"><a href="#异常上报与监控" class="headerlink" title="异常上报与监控"></a>异常上报与监控</h3><p>异常类型</p><ul><li>网络</li><li>接口</li><li>代码</li><li>数据</li></ul><p>通过线上的异常监控可以及时拿到用户的异常信息，即时修复。</p><h3 id="全栈"><a href="#全栈" class="headerlink" title="全栈"></a>全栈</h3><p>年初之时就想朝着全栈发展，这半年从结果上看，离自己的目标还是有一段距离，现在后端的同事们都在朝着全栈发展，我们也不能落后。如果有相关后端业务的话，希望自己还是能够主动去争取</p><!--stackedit_data:eyJoaXN0b3J5IjpbLTE5NDU0NTQ0MjRdfQ==-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;转眼18年已经过半，到公司已经快一年了。从年初到现在的这半年间切实体会到了什么叫做痛并快乐着。从做寄养开始，压力就一直伴随在身边。用新技术处
      
    
    </summary>
    
    
    
      <category term="summary" scheme="blog.lovesora.pro/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>浅谈angularjs架构演进</title>
    <link href="blog.lovesora.pro/2018/06/25/fe/%E6%9E%B6%E6%9E%84/angularjs/"/>
    <id>blog.lovesora.pro/2018/06/25/fe/%E6%9E%B6%E6%9E%84/angularjs/</id>
    <published>2018-06-25T21:48:06.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>笔者大言不惭将其称为前端架构，各位大佬可直接略过</p></blockquote><h2 id="前言（纯属乱劈柴，可直接略过）"><a href="#前言（纯属乱劈柴，可直接略过）" class="headerlink" title="前言（纯属乱劈柴，可直接略过）"></a>前言（纯属乱劈柴，可直接略过）</h2><p>在公司工作快一年了，收获了很多东西，<code>学而不思则罔，思而不学则殆</code>。都明白，智者总是一语道天机，大道至简，很多核心的设计思想往往都是非常简洁，明了的。这一年做了太多的东西，却思考得太少，没有理解到技术的原理，深深地陷入了码农深渊，不知道为什么这么做，为什么这样设计（现在老是后悔以前上大学的时候没有好好学习理论知识，书到用时方恨少）。每次从需求到研发，都是拿着设计图，思考实现这个东西要怎么做，时间可控不，要花多少时间，有什么风险，需要什么依赖，哪些东西可以复用等等。但是，产品初衷是什么？解决了用户什么刚需？为什么设计师要这样子设计？后端数据库怎么设计的？为什么要给这样的数据结构？这些往往难以接触，即使有机会了解，也不太愿意花时间去做。很多时候都不清除源头，就开始草草动工，只着眼于自己领域的实现，结果往往就是各种返工。既然看不到原理，那就先从现象入手吧，透过现象看本质。现象都不知道，还鬼的个本质？</p><h2 id="最原始架构"><a href="#最原始架构" class="headerlink" title="最原始架构"></a>最原始架构</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;笔者大言不惭将其称为前端架构，各位大佬可直接略过&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言（纯属乱劈柴，可直接略过）&quot;&gt;&lt;a href=&quot;#前言（纯属乱劈柴，可直接略过）&quot; class=&quot;headerlink&quot; title=&quot;前言（
      
    
    </summary>
    
    
    
      <category term="angularjs" scheme="blog.lovesora.pro/tags/angularjs/"/>
    
      <category term="architecture" scheme="blog.lovesora.pro/tags/architecture/"/>
    
  </entry>
  
  <entry>
    <title>Git Stash 保存和恢复进度</title>
    <link href="blog.lovesora.pro/2018/06/14/vcs/git/git-stash/"/>
    <id>blog.lovesora.pro/2018/06/14/vcs/git/git-stash/</id>
    <published>2018-06-14T10:48:09.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>stash</code> 使用的<code>stack</code>数据结构，先进先出</p></blockquote><h2 id="保存进度"><a href="#保存进度" class="headerlink" title="保存进度"></a>保存进度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不包括untracked的文件（比如新增的文件，不会被添加至储藏）</span></span><br><span class="line"><span class="comment"># untrack 的文件在stash后依然可见——即依然在工作空间中，不会被保存到stash镜像中，因此对 untrack 文件的修改不能通过 stash pop 恢复——因为该命令不暂存未track的文件</span></span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 message</span></span><br><span class="line">git stash save <span class="string">'message...'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加(untracked)暂存区的文件（新增的文件会被移动至储藏）</span></span><br><span class="line">git stash save -u <span class="string">'message...'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加所有(--all)文件（包括.gitignore中忽略的文件)（比如node_modules，执行该命令后就也会被移除了，可以看作刚clone下来时的状态）</span></span><br><span class="line">git stash save -a <span class="string">'message...'</span></span><br></pre></td></tr></table></figure><h2 id="查看进度列表"><a href="#查看进度列表" class="headerlink" title="查看进度列表"></a>查看进度列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br><span class="line"><span class="comment"># stash@&#123;0&#125;: WIP on master: ef0f1dc message...</span></span><br></pre></td></tr></table></figure><h2 id="恢复进度"><a href="#恢复进度" class="headerlink" title="恢复进度"></a>恢复进度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复至最新进度并且删除</span></span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定进度index</span></span><br><span class="line"><span class="comment"># 这里的 3 指的 git stash list 显示的列表里 stash@&#123;3&#125; 中括号里面的数字</span></span><br><span class="line">git stash pop 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复但不删除</span></span><br><span class="line">git stash apply</span><br><span class="line">git stash apply 3</span><br></pre></td></tr></table></figure><h2 id="删除进度"><a href="#删除进度" class="headerlink" title="删除进度"></a>删除进度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除最新进度</span></span><br><span class="line">git stash drop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定进度index</span></span><br><span class="line">git stash drop 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有进度</span></span><br><span class="line">git stash clear</span><br></pre></td></tr></table></figure><h2 id="从储藏中创建分支"><a href="#从储藏中创建分支" class="headerlink" title="从储藏中创建分支"></a>从储藏中创建分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个新的分支，检出你储藏工作时的所处的提交，重新应用你的工作，如果成功，将会丢弃储藏</span></span><br><span class="line">git stash branch stash/branchName 3</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://git-scm.com/book/zh/v1/Git-%E5%B7%A5%E5%85%B7-%E5%82%A8%E8%97%8F%EF%BC%88Stashing%EF%BC%89" target="_blank" rel="noopener">Git-工具-储藏</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;stash&lt;/code&gt; 使用的&lt;code&gt;stack&lt;/code&gt;数据结构，先进先出&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;保存进度&quot;&gt;&lt;a href=&quot;#保存进度&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
    
      <category term="git" scheme="blog.lovesora.pro/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>docker flow</title>
    <link href="blog.lovesora.pro/2018/06/05/devops/docker/flow/"/>
    <id>blog.lovesora.pro/2018/06/05/devops/docker/flow/</id>
    <published>2018-06-05T18:23:26.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flow"><a href="#Flow" class="headerlink" title="Flow"></a>Flow</h2><ul><li>导入镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import centos-ng-0.0.2.tar centos:ng-0.0.2</span><br></pre></td></tr></table></figure><ul><li>运行容器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name centos-ng-v0.0.2 \</span><br><span class="line">  -p 127.0.0.1:7203:7203 -p 127.0.0.1:7204:7204 \</span><br><span class="line">  --volume /Users/liuxin/docker/centos-ng:/opt/petkit \</span><br><span class="line">  centos:ng-0.0.2 bash</span><br></pre></td></tr></table></figure><ul><li>进入容器终端</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it centos-ng-v0.0.2 bash</span><br></pre></td></tr></table></figure><ul><li>退出终端</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li>启动／停止容器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker start centos-ng-v0.0.2</span><br><span class="line">docker stop centos-ng-v0.0.2</span><br></pre></td></tr></table></figure><ul><li>查看所有容器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><ul><li>删除容器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm centos-ng-v0.0.2</span><br></pre></td></tr></table></figure><ul><li>从容器导出镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">export</span> -o centos-ng-0.0.2.tar a843ae730779</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Flow&quot;&gt;&lt;a href=&quot;#Flow&quot; class=&quot;headerlink&quot; title=&quot;Flow&quot;&gt;&lt;/a&gt;Flow&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;导入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="docker" scheme="blog.lovesora.pro/tags/docker/"/>
    
      <category term="flow" scheme="blog.lovesora.pro/tags/flow/"/>
    
  </entry>
  
  <entry>
    <title>在fish中使用sdkman</title>
    <link href="blog.lovesora.pro/2018/06/05/fe/ionic/install/sdk/"/>
    <id>blog.lovesora.pro/2018/06/05/fe/ionic/install/sdk/</id>
    <published>2018-06-05T00:47:52.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-sdkman"><a href="#安装-sdkman" class="headerlink" title="安装 sdkman"></a>安装 <code>sdkman</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s <span class="string">"https://get.sdkman.io"</span> | bash</span><br></pre></td></tr></table></figure><h2 id="创建文件-HOME-config-fish-conf-d-sdkman-fish"><a href="#创建文件-HOME-config-fish-conf-d-sdkman-fish" class="headerlink" title="创建文件 $HOME/.config/fish/conf.d/sdkman.fish"></a>创建文件 <code>$HOME/.config/fish/conf.d/sdkman.fish</code></h2><p>写入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/fish</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sdk command</span></span><br><span class="line"><span class="keyword">function</span> sdk</span><br><span class="line">        bash -c <span class="string">"source <span class="variable">$HOME</span>/.sdkman/bin/sdkman-init.sh &amp;&amp; sdk <span class="variable">$argv</span>"</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"><span class="comment"># add paths</span></span><br><span class="line"><span class="keyword">for</span> ITEM <span class="keyword">in</span> <span class="variable">$HOME</span>/.sdkman/candidates/* ;</span><br><span class="line">        <span class="built_in">set</span> -gx PATH <span class="variable">$PATH</span> <span class="variable">$ITEM</span>/current/bin</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://github.com/sdkman/sdkman-cli/issues/294" target="_blank" rel="noopener">sdkman doesn’t work with Fish shell</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-sdkman&quot;&gt;&lt;a href=&quot;#安装-sdkman&quot; class=&quot;headerlink&quot; title=&quot;安装 sdkman&quot;&gt;&lt;/a&gt;安装 &lt;code&gt;sdkman&lt;/code&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="fish" scheme="blog.lovesora.pro/tags/fish/"/>
    
      <category term="sdkman" scheme="blog.lovesora.pro/tags/sdkman/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 设置 yum 换源</title>
    <link href="blog.lovesora.pro/2018/06/02/linux/centos/yum-epel/"/>
    <id>blog.lovesora.pro/2018/06/02/linux/centos/yum-epel/</id>
    <published>2018-06-02T01:17:45.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-备份-CentOS-Base-repo"><a href="#1-备份-CentOS-Base-repo" class="headerlink" title="1. 备份 CentOS-Base.repo"></a>1. 备份 <code>CentOS-Base.repo</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure><h2 id="2-替换-etc-yum-repos-d-CentOS-Base-repo-内容"><a href="#2-替换-etc-yum-repos-d-CentOS-Base-repo-内容" class="headerlink" title="2. 替换 /etc/yum.repos.d/CentOS-Base.repo 内容"></a>2. 替换 <code>/etc/yum.repos.d/CentOS-Base.repo</code> 内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS-Base.repo</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The mirror system uses the connecting IP address of the client and the</span></span><br><span class="line"><span class="comment"># update status of each mirror to pick mirrors that are updated to and</span></span><br><span class="line"><span class="comment"># geographically close to the client.  You should use this for CentOS updates</span></span><br><span class="line"><span class="comment"># unless you are manually picking other mirrors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If the mirrorlist= does not work for you, as a fall back you can try the </span></span><br><span class="line"><span class="comment"># remarked out baseurl= line instead.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"> </span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line"><span class="comment">#released updates </span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Updates - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Extras - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Plus - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/<span class="variable">$releasever</span>/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"> </span><br><span class="line"><span class="comment">#contrib - packages by Centos Users</span></span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Contrib - mirrors.aliyun.com</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/contrib/<span class="variable">$basearch</span>/</span><br><span class="line">        http://mirrors.aliyuncs.com/centos/<span class="variable">$releasever</span>/contrib/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=contrib</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><h2 id="3-Install-epel"><a href="#3-Install-epel" class="headerlink" title="3. Install epel"></a>3. Install epel</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><h2 id="4-替换-etc-yum-repos-d-epel-repo-内容"><a href="#4-替换-etc-yum-repos-d-epel-repo-内容" class="headerlink" title="4. 替换 /etc/yum.repos.d/epel.repo 内容"></a>4. 替换 <code>/etc/yum.repos.d/epel.repo</code> 内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/<span class="variable">$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line"></span><br><span class="line">[epel-debuginfo]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span> - Debug</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/<span class="variable">$basearch</span>/debug</span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=1</span><br><span class="line"></span><br><span class="line">[epel-source]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span> - Source</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/SRPMS</span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-备份-CentOS-Base-repo&quot;&gt;&lt;a href=&quot;#1-备份-CentOS-Base-repo&quot; class=&quot;headerlink&quot; title=&quot;1. 备份 CentOS-Base.repo&quot;&gt;&lt;/a&gt;1. 备份 &lt;code&gt;CentOS-Bas
      
    
    </summary>
    
    
    
      <category term="centos7" scheme="blog.lovesora.pro/tags/centos7/"/>
    
      <category term="epel" scheme="blog.lovesora.pro/tags/epel/"/>
    
  </entry>
  
  <entry>
    <title>Docker FAQ</title>
    <link href="blog.lovesora.pro/2018/06/02/devops/docker/faq/"/>
    <id>blog.lovesora.pro/2018/06/02/devops/docker/faq/</id>
    <published>2018-06-02T01:03:49.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mac-端口映射无效"><a href="#Mac-端口映射无效" class="headerlink" title="Mac 端口映射无效"></a>Mac 端口映射无效</h2><p>端口映射语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p [host IP:]&lt;host port&gt;:&lt;container port&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># before</span></span><br><span class="line">-p 80:80</span><br><span class="line"></span><br><span class="line"><span class="comment"># now</span></span><br><span class="line">-p 127.0.0.1:80:80</span><br></pre></td></tr></table></figure><h2 id="重设端口映射"><a href="#重设端口映射" class="headerlink" title="重设端口映射"></a>重设端口映射</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker stop nginx</span><br><span class="line">docker commit nginx nginx:v1.0.1</span><br><span class="line">docker run -p 80:80 nginx:v1.0.1</span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="https://github.com/docker/for-mac/issues/1675" target="_blank" rel="noopener">Port forwarding doesn’t work at all</a></li><li><a href="https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container" target="_blank" rel="noopener">Assign a port mapping to an existing Docker container</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Mac-端口映射无效&quot;&gt;&lt;a href=&quot;#Mac-端口映射无效&quot; class=&quot;headerlink&quot; title=&quot;Mac 端口映射无效&quot;&gt;&lt;/a&gt;Mac 端口映射无效&lt;/h2&gt;&lt;p&gt;端口映射语法&lt;/p&gt;
&lt;figure class=&quot;highlight ba
      
    
    </summary>
    
    
    
      <category term="docker" scheme="blog.lovesora.pro/tags/docker/"/>
    
      <category term="faq" scheme="blog.lovesora.pro/tags/faq/"/>
    
  </entry>
  
  <entry>
    <title>企业需求管理工具</title>
    <link href="blog.lovesora.pro/2018/06/02/enterprise/tools/requirements/"/>
    <id>blog.lovesora.pro/2018/06/02/enterprise/tools/requirements/</id>
    <published>2018-06-02T00:58:50.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TAPD"><a href="#TAPD" class="headerlink" title="TAPD"></a>TAPD</h2><blockquote><p><a href="https://www.tapd.cn/" target="_blank" rel="noopener">tapd official site</a></p></blockquote><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><ul><li>一站式研发协作平台，腾讯敏捷最佳实践</li><li>团队协作与产品研发全生命周期支持</li><li>一个平台，让团队聚焦目标，专注协作</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;TAPD&quot;&gt;&lt;a href=&quot;#TAPD&quot; class=&quot;headerlink&quot; title=&quot;TAPD&quot;&gt;&lt;/a&gt;TAPD&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tapd.cn/&quot; target=&quot;_blank&quot; re
      
    
    </summary>
    
    
    
      <category term="enterprise" scheme="blog.lovesora.pro/tags/enterprise/"/>
    
      <category term="requirement" scheme="blog.lovesora.pro/tags/requirement/"/>
    
      <category term="tool" scheme="blog.lovesora.pro/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>docker 基础</title>
    <link href="blog.lovesora.pro/2018/05/31/devops/docker/basis/"/>
    <id>blog.lovesora.pro/2018/05/31/devops/docker/basis/</id>
    <published>2018-05-31T14:30:54.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>所有命令均在 centOS 7 上执行</p></blockquote><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>镜像(<code>Image</code>)<ul><li>相当于是一个 root 文件系统</li><li>提供容器运行时所需的程序、库、资源、配置等文件</li><li>还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）</li><li>镜像不包含任何动态数据，其内容在构建之后也不会被改变</li><li>镜像是分层存储的，由多层文件系统联合组成</li><li>镜像构建时，会一层层构建，前一层是后一层的基础。</li><li>每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。</li></ul></li><li>容器(<code>Container</code>)<ul><li>镜像和容器的关系，就像是面向对象程序设计中的 <code>类</code> 和 <code>实例</code> 一样</li><li>容器的实质是进程</li><li>容器进程运行于属于自己的独立的命名空间</li><li>容器也是使用的是分层存储(<code>容器存储层</code>)</li><li>容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。</li><li>容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化</li><li>所有的文件写入操作，都应该使用 <code>数据卷（Volume）</code>、或者绑定宿主目录</li><li>数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡</li></ul></li><li>仓库(Registry)<ul><li>registry/repository:tag</li><li>默认registry地址 <a href="https://hub.docker.com/explore/" target="_blank" rel="noopener">docker hub</a></li><li>默认registry名 <code>library</code></li></ul></li><li>构建(build)<ul><li>Docker 在运行时分为 Docker 引擎（也就是服务端守护进程）和客户端工具</li><li>Docker 的引擎提供了一组 REST API，被称为 Docker Remote API</li><li>而如 docker 命令这样的客户端工具，则是通过这组 API 与 Docker 引擎交互</li><li>虽然表面上我们好像是在本机执行各种 docker 功能，但实际上，一切都是使用的远程调用形式在服务端（Docker 引擎）完成</li><li>也因为这种 C/S 设计，让我们操作远程服务器的 Docker 引擎变得轻而易举</li><li><code>docker build -t nginx:v3 .</code> 中的这个 <code>.</code>，实际上是在指定上下文的目录</li><li>docker build 命令会将该目录下的内容打包交给 Docker 引擎以帮助构建镜像</li><li>一般来说，应该会将 Dockerfile 置于一个空目录下，或者项目根目录下</li><li>如果该目录下没有所需文件，那么应该把所需文件复制一份过来</li><li>如果目录下有些东西确实不希望构建时传给 Docker 引擎，那么可以用 .gitignore 一样的语法写一个 .dockerignore，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。</li></ul></li></ul><h2 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h2><h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pull</span></span><br><span class="line">docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]</span><br><span class="line"></span><br><span class="line">docker pull ubuntu:16.04</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># image</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出镜像</span></span><br><span class="line">docker image ls</span><br><span class="line"><span class="comment"># 列出所有镜像(包括中间层镜像)</span></span><br><span class="line">docker image ls -a</span><br><span class="line"><span class="comment"># 列出指定仓库镜像</span></span><br><span class="line">docker image ls ubuntu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 虚悬镜像(dangling image)</span></span><br><span class="line">docker image ls -f dangling=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 删除虚悬镜像(dangling image)</span></span><br><span class="line">docker image prune</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除镜像</span></span><br><span class="line">docker image rm [选项] &lt;镜像1&gt; [&lt;镜像2&gt; ...]</span><br><span class="line">docker image rm [Image ID]</span><br><span class="line">docker image rm centos</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system</span></span><br><span class="line"><span class="comment"># 查看docker所占空间</span></span><br><span class="line">docker system df</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">history</span> imageName:imageTag</span><br></pre></td></tr></table></figure><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a><code>commit</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker commit(慎用)(臃肿) 生成的镜像也被称为黑箱镜像</span></span><br><span class="line">docker commit \</span><br><span class="line">  --author <span class="string">'liuxin'</span> \</span><br><span class="line">  --message <span class="string">'commit msg'</span> \</span><br><span class="line">  containerName \</span><br><span class="line">  imageName:imageTag</span><br></pre></td></tr></table></figure><h3 id="exec"><a href="#exec" class="headerlink" title="exec"></a><code>exec</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it containerName bash</span><br></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build"></a><code>build</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build [选项] &lt;上下文路径/URL/-&gt;</span><br><span class="line"></span><br><span class="line">docker build -t imageName:imageTag .</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;所有命令均在 centOS 7 上执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;镜像(&lt;code&gt;I
      
    
    </summary>
    
    
    
      <category term="docker" scheme="blog.lovesora.pro/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>shell 基础</title>
    <link href="blog.lovesora.pro/2018/05/31/devops/shell/basis/"/>
    <id>blog.lovesora.pro/2018/05/31/devops/shell/basis/</id>
    <published>2018-05-31T00:48:30.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>语法<ul><li>每句末尾的 <code>;</code> 是可选的</li><li>赋值<ul><li>赋值语句 <code>=</code> 两边不能有空格</li></ul></li><li>取值<ul><li><code>&#39;&#39;</code> 内不会取到变量具体内容</li><li><code>&quot;&quot;</code> 内的变量会被替换成值</li></ul></li><li>判断<ul><li>判断语句 <code>[</code> <code>]</code> 两边都需要有空格</li><li><code>-d</code> 两边都需要空格</li><li>多重判断 <code>[[]]</code> 间使用 <code>||</code> 或者 <code>&amp;&amp;</code> 连接，<code>||</code> 和 <code>&amp;&amp;</code> 两边空格是可选的</li></ul></li><li>循环 <code>for var in 1 2 3; do</code> <code>done</code><ul><li>循环列表中使用空格 <code></code> 区分项</li><li><code>do</code> 为开始 <code>done</code> 为结束</li><li>使用变量 <code>$var</code></li></ul></li></ul></li><li>变量<ul><li>使用变量时添加 <code>$</code> 前缀</li></ul></li><li>函数<ul><li>函数声明内可以引用函数外部变量</li><li>函数内部可以使用作用域链上的变量，但取不到未执行的变量</li></ul></li><li>获取用户输入 <code>read</code><ul><li><code>-p</code> 允许输入提示</li></ul></li><li>全局变量<ul><li><code>$0</code> 脚本执行路径</li></ul></li><li>命令<ul><li><code>dirname $path</code> 获取 <code>$path</code> 上层目录<ul><li><code>path=/path/to/filename</code></li><li><code>$(dirname $path) # /path/to</code></li></ul></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ROOT=<span class="variable">$PWD</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$PWD'</span>; <span class="comment"># $PWD</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$PWD</span>"</span>; <span class="comment"># /path/to</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">createDir</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$before</span>; <span class="comment"># before ...</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$after</span>;  <span class="comment"># empty line</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> arg <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    DIR=<span class="variable">$ROOT</span>/<span class="variable">$arg</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="variable">$DIR</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"<span class="variable">$DIR</span> is already a directory"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">read</span> -p <span class="string">"create <span class="variable">$DIR</span> ? (Y/n)"</span> isYes;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$isYes</span>"</span> = <span class="string">"Y"</span> ]] || [[ ! <span class="variable">$isYes</span> ]]; <span class="keyword">then</span></span><br><span class="line">        mkdir <span class="variable">$DIR</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"cancel create <span class="variable">$DIR</span>"</span>;</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">before=<span class="string">"before..."</span>;</span><br><span class="line"></span><br><span class="line">createDir <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">after=<span class="string">"after..."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> <span class="string">"a a"</span> b c; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$var</span>; <span class="comment"># a a, b, c</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$0</span>; <span class="comment"># 执行路径</span></span><br><span class="line"><span class="built_in">echo</span> $(dirname <span class="variable">$0</span>); <span class="comment"># 获取上层目录</span></span><br></pre></td></tr></table></figure><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><ul><li><a href="http://blog.51cto.com/lynnteng0/798365" target="_blank" rel="noopener">shell if 多条件 或 泛匹配</a></li><li><a href="https://stackoverflow.com/questions/255898/how-to-iterate-over-arguments-in-a-bash-script" target="_blank" rel="noopener">How to iterate over arguments in a Bash script</a></li><li><a href="https://stackoverflow.com/questions/59838/check-if-a-directory-exists-in-a-shell-script" target="_blank" rel="noopener">Check if a directory exists in a shell script</a></li><li><a href="https://stackoverflow.com/questions/42453262/how-to-prompt-user-for-input-in-shell-script" target="_blank" rel="noopener">How to prompt user for input in shell script?</a></li><li><a href="https://stackoverflow.com/questions/10849297/compare-a-string-in-unix" target="_blank" rel="noopener">Compare a string in Unix</a></li><li><a href="https://blog.csdn.net/x1269778817/article/details/46535729" target="_blank" rel="noopener">Linux shell 中$() <code></code> 作用与区别</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;语法&lt;ul&gt;
&lt;li&gt;每句末尾的 &lt;code&gt;;&lt;/code&gt; 是可选的&lt;/li&gt;
&lt;li&gt;赋值&lt;ul&gt;
&lt;li&gt;赋值语句 &lt;c
      
    
    </summary>
    
    
    
      <category term="shell" scheme="blog.lovesora.pro/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>XLSX 导出excel文件 (TS)</title>
    <link href="blog.lovesora.pro/2018/05/29/javascript/exports/xlsx/"/>
    <id>blog.lovesora.pro/2018/05/29/javascript/exports/xlsx/</id>
    <published>2018-05-29T11:45:30.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Step-1-安装依赖-xlsx"><a href="#Step-1-安装依赖-xlsx" class="headerlink" title="Step 1. 安装依赖 xlsx"></a>Step 1. 安装依赖 <code>xlsx</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add xlsx</span><br></pre></td></tr></table></figure><h2 id="Step-2-Import"><a href="#Step-2-Import" class="headerlink" title="Step 2. Import"></a>Step 2. Import</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> XLSX <span class="keyword">from</span> <span class="string">'xlsx'</span>;</span><br></pre></td></tr></table></figure><h2 id="Step-3-Usage"><a href="#Step-3-Usage" class="headerlink" title="Step 3. Usage"></a>Step 3. Usage</h2><p>xlsx支持多种格式导出，具体可以参考官方文档<a href="https://github.com/SheetJS/js-xlsx" target="_blank" rel="noopener">github</a></p><blockquote><p><a href="https://stackblitz.com/edit/angular-pzkjbz" target="_blank" rel="noopener">demo</a></p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Export &#123;</span><br><span class="line">  <span class="keyword">private</span> _wb: XLSX.WorkBook = XLSX.utils.book_new();</span><br><span class="line"></span><br><span class="line">  appendSheet(aoaData, &#123;</span><br><span class="line">    sheetName = <span class="string">'sheet'</span>,</span><br><span class="line">  &#125; = &#123;&#125;) &#123;</span><br><span class="line">    <span class="comment">// 与左上角和右下角确认一个矩形相似</span></span><br><span class="line">    <span class="keyword">const</span> merge = &#123;</span><br><span class="line">      <span class="comment">// start</span></span><br><span class="line">      s: &#123;</span><br><span class="line">        <span class="comment">// row</span></span><br><span class="line">        r: <span class="number">0</span>,</span><br><span class="line">        <span class="comment">// column</span></span><br><span class="line">        c: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// end</span></span><br><span class="line">      e: &#123;</span><br><span class="line">        r: <span class="number">0</span>,</span><br><span class="line">        c: <span class="number">1</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 与以下写法结果相同</span></span><br><span class="line">    <span class="comment">// const merge = XLSX.utils.decode_range("A1:A2");</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> ws: XLSX.WorkSheet = XLSX.utils.aoa_to_sheet(aoaData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ws[<span class="string">'!merges'</span>]) &#123;</span><br><span class="line">       ws[<span class="string">'!merges'</span>] = [];</span><br><span class="line">    &#125;</span><br><span class="line">    ws[<span class="string">'!merges'</span>].push(merge);</span><br><span class="line"></span><br><span class="line">    XLSX.utils.book_append_sheet(<span class="keyword">this</span>._wb, ws, sheetName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  exportExcelFile(filename = <span class="string">'export.xlsx'</span>) &#123;</span><br><span class="line">    XLSX.writeFile(<span class="keyword">this</span>._wb, filename);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> exports = <span class="keyword">new</span> Export();</span><br><span class="line"></span><br><span class="line">exports.appendSheet([[<span class="string">'a'</span>, <span class="string">'b'</span>], [<span class="string">'c'</span>], [<span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>]]);</span><br><span class="line"></span><br><span class="line">exports.exportExcelFile();</span><br></pre></td></tr></table></figure><p><img src="/assets/images/output/export.png" alt="output"></p><h2 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h2><blockquote><p><a href="https://github.com/SheetJS/js-xlsx" target="_blank" rel="noopener">js-xlsx</a><br><a href="https://github.com/SheetJS/js-xlsx/issues/964" target="_blank" rel="noopener">merge cells from Array of Arrays</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Step-1-安装依赖-xlsx&quot;&gt;&lt;a href=&quot;#Step-1-安装依赖-xlsx&quot; class=&quot;headerlink&quot; title=&quot;Step 1. 安装依赖 xlsx&quot;&gt;&lt;/a&gt;Step 1. 安装依赖 &lt;code&gt;xlsx&lt;/code&gt;&lt;/h2&gt;&lt;f
      
    
    </summary>
    
    
    
      <category term="xlsx" scheme="blog.lovesora.pro/tags/xlsx/"/>
    
  </entry>
  
  <entry>
    <title>Angular Library 分离实践</title>
    <link href="blog.lovesora.pro/2018/05/28/fe/angular/%E6%9D%82%E6%96%87/library/"/>
    <id>blog.lovesora.pro/2018/05/28/fe/angular/%E6%9D%82%E6%96%87/library/</id>
    <published>2018-05-28T16:22:22.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原理就是利用绝对路径加载Library项目，其本身是可以抽离出去单独作为一个项目维护的。</p></blockquote><blockquote><p>在<code>angular 6</code>发布之前一直实用的<code>ng-packagr</code>手动构建angular library。</p></blockquote><blockquote><p><code>angular 6</code>发布后可以通过<code>ng g library xxx</code> 自动生成lib项目，但是目前还不够完善，不支持实时编译，还有待完善。</p></blockquote><blockquote><p>本文主要是优化library项目在开发阶段和project项目之间的调试问题。</p></blockquote><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line">  |-projects</span><br><span class="line">    |-material</span><br><span class="line">    |-common</span><br><span class="line">    |-flux</span><br><span class="line">  |-src</span><br><span class="line">    |-tsconfig.app.json</span><br><span class="line">    |-tsconfig.spec.json</span><br><span class="line">  tsconfig.json</span><br></pre></td></tr></table></figure><h2 id="去除-tsconfig-app-json-和-tsconfig-spec-json-中的-baseUrl"><a href="#去除-tsconfig-app-json-和-tsconfig-spec-json-中的-baseUrl" class="headerlink" title="去除 tsconfig.app.json 和 tsconfig.spec.json 中的 baseUrl"></a>去除 <code>tsconfig.app.json</code> 和 <code>tsconfig.spec.json</code> 中的 <code>baseUrl</code></h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// before</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"extends"</span>: <span class="string">"../tsconfig.json"</span>,</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"baseUrl"</span>: <span class="string">"./"</span>,</span><br><span class="line">    <span class="attr">"outDir"</span>: <span class="string">"../out-tsc/app"</span>,</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"es2015"</span>,</span><br><span class="line">    <span class="attr">"types"</span>: []</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"exclude"</span>: [</span><br><span class="line">    <span class="string">"test.ts"</span>,</span><br><span class="line">    <span class="string">"**/*.spec.ts"</span>,</span><br><span class="line">    <span class="string">"../node_modules/@petkit/**/*"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// now</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"extends"</span>: <span class="string">"../tsconfig.json"</span>,</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"outDir"</span>: <span class="string">"../out-tsc/app"</span>,</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"es2015"</span>,</span><br><span class="line">    <span class="attr">"types"</span>: []</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"exclude"</span>: [</span><br><span class="line">    <span class="string">"test.ts"</span>,</span><br><span class="line">    <span class="string">"**/*.spec.ts"</span>,</span><br><span class="line">    <span class="string">"../node_modules/@petkit/**/*"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在-tsconfig-json-中添加-baseUrl-配置-paths"><a href="#在-tsconfig-json-中添加-baseUrl-配置-paths" class="headerlink" title="在 tsconfig.json 中添加 baseUrl, 配置 paths"></a>在 <code>tsconfig.json</code> 中添加 <code>baseUrl</code>, 配置 <code>paths</code></h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"baseUrl"</span>: <span class="string">"./"</span>,</span><br><span class="line">    <span class="attr">"paths"</span>: &#123;</span><br><span class="line">      <span class="attr">"@libs/*"</span>: [</span><br><span class="line">        <span class="string">"projects/*"</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 注意 **</p><ol><li>library项目中需要在根路径加上<code>index.ts</code>，以便与实际生产环境下的引用方式保持一致</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.ts</span></span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">'./public_api'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;原理就是利用绝对路径加载Library项目，其本身是可以抽离出去单独作为一个项目维护的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在&lt;code&gt;angular 6&lt;/code&gt;发布之前一直实用的&lt;code&gt;ng-pack
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="library" scheme="blog.lovesora.pro/tags/library/"/>
    
  </entry>
  
  <entry>
    <title>tsconfig json schema</title>
    <link href="blog.lovesora.pro/2018/05/28/fe/typescript/schema/"/>
    <id>blog.lovesora.pro/2018/05/28/fe/typescript/schema/</id>
    <published>2018-05-28T11:28:36.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="json-schemastore"><a href="#json-schemastore" class="headerlink" title="json schemastore"></a>json schemastore</h2><blockquote><p><a href="http://json.schemastore.org/tsconfig" target="_blank" rel="noopener">json schemastore</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;json-schemastore&quot;&gt;&lt;a href=&quot;#json-schemastore&quot; class=&quot;headerlink&quot; title=&quot;json schemastore&quot;&gt;&lt;/a&gt;json schemastore&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="ts" scheme="blog.lovesora.pro/tags/ts/"/>
    
      <category term="schema" scheme="blog.lovesora.pro/tags/schema/"/>
    
  </entry>
  
  <entry>
    <title>git flow</title>
    <link href="blog.lovesora.pro/2018/05/28/vcs/git/git-flow/"/>
    <id>blog.lovesora.pro/2018/05/28/vcs/git/git-flow/</id>
    <published>2018-05-28T11:21:03.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Generate-the-Commit-Message"><a href="#Generate-the-Commit-Message" class="headerlink" title="Generate the Commit Message"></a>Generate the Commit Message</h1><h2 id="Install-commitizen"><a href="#Install-commitizen" class="headerlink" title="Install commitizen"></a>Install <code>commitizen</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install</span></span><br><span class="line">yarn global add commitizen</span><br><span class="line"></span><br><span class="line"><span class="comment"># exec in project root</span></span><br><span class="line">commitizen init cz-conventional-changelog --save --save-exact</span><br></pre></td></tr></table></figure><h1 id="Validate-the-Commit-Message"><a href="#Validate-the-Commit-Message" class="headerlink" title="Validate the Commit Message"></a>Validate the Commit Message</h1><h2 id="Install-husky-to-help-us-use-git-and-npm-hooks"><a href="#Install-husky-to-help-us-use-git-and-npm-hooks" class="headerlink" title="Install husky to help us use git and npm hooks"></a>Install <code>husky</code> to help us use git and npm hooks</h2><blockquote><p><a href="https://github.com/typicode/husky/blob/master/HOOKS.md" target="_blank" rel="noopener">husky hooks</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add husky --dev</span><br></pre></td></tr></table></figure><h2 id="Install-commitlint"><a href="#Install-commitlint" class="headerlink" title="Install commitlint"></a>Install <code>commitlint</code></h2><blockquote><p><a href="https://github.com/marionebl/commitlint#getting-started" target="_blank" rel="noopener">commitlint</a></p></blockquote><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For Windows:</span></span><br><span class="line">yarn add --dev @commitlint/config-conventional @commitlint/cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure commitlint to use angular config</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"module.exports = &#123;extends: ['@commitlint/config-conventional']&#125;"</span> &gt; commitlint.config.js</span><br></pre></td></tr></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"commitmsg"</span>: <span class="string">"commitlint -e $GIT_PARAMS"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Generate-ChangeLog"><a href="#Generate-ChangeLog" class="headerlink" title="Generate ChangeLog"></a>Generate ChangeLog</h1><h2 id="Install-conventional-changelog-cli"><a href="#Install-conventional-changelog-cli" class="headerlink" title="Install conventional-changelog-cli"></a>Install <code>conventional-changelog-cli</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add --dev conventional-changelog-cli</span><br></pre></td></tr></table></figure><h2 id="Configuration-1"><a href="#Configuration-1" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"conventional-changelog -p angular -i CHANGELOG.md -s -r 0 &amp;&amp; git add CHANGELOG.md"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Branch-Management"><a href="#Branch-Management" class="headerlink" title="Branch Management"></a>Branch Management</h1><p>该分支模型值得借鉴的地方包括</p><ul><li>规范的分支命名</li><li>将分支和代码运行环境关联起来</li></ul><p>分支和代码运行环境的关系是这样的，</p><ul><li>master =&gt; 生产环境</li><li>release/<em>，hotfix/</em> =&gt; 预上线环境</li><li>feature/*，develop =&gt; 开发环境</li></ul><h1 id="git-flow-Installation"><a href="#git-flow-Installation" class="headerlink" title="git flow Installation"></a><code>git flow</code> Installation</h1><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git-flow</span><br></pre></td></tr></table></figure><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -OL https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh</span><br><span class="line">chmod +x gitflow-installer.sh</span><br><span class="line">sudo ./gitflow-installer.sh</span><br></pre></td></tr></table></figure><h1 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h1><ul><li><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener">Commit message 和 Change log 编写指南</a></li><li><a href="https://yuhongjun.github.io/tech/2017/04/28/git%E4%BB%93%E5%BA%93%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95-%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%B9%B2%E5%87%80%E7%9A%84%E6%96%B0%E4%BB%93%E5%BA%93.html" target="_blank" rel="noopener">git仓库删除所有提交历史记录，成为一个干净的新仓库</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Generate-the-Commit-Message&quot;&gt;&lt;a href=&quot;#Generate-the-Commit-Message&quot; class=&quot;headerlink&quot; title=&quot;Generate the Commit Message&quot;&gt;&lt;/a&gt;Gener
      
    
    </summary>
    
    
    
      <category term="flow" scheme="blog.lovesora.pro/tags/flow/"/>
    
      <category term="git" scheme="blog.lovesora.pro/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>angular v5升级至v6</title>
    <link href="blog.lovesora.pro/2018/05/28/fe/angular/%E6%9D%82%E6%96%87/v5-to-v6/"/>
    <id>blog.lovesora.pro/2018/05/28/fe/angular/%E6%9D%82%E6%96%87/v5-to-v6/</id>
    <published>2018-05-28T11:15:31.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装v8版node-lts"><a href="#安装v8版node-lts" class="headerlink" title="安装v8版node lts"></a>安装v8版node lts</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># now is 8.11.2</span></span><br><span class="line">sudo n lts</span><br></pre></td></tr></table></figure><h2 id="升级-angular-cli"><a href="#升级-angular-cli" class="headerlink" title="升级 @angular/cli"></a>升级 <code>@angular/cli</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g @angular/cli</span><br><span class="line">npm cache verify</span><br><span class="line">npm i -g @angular/cli@6.0.0</span><br></pre></td></tr></table></figure><h2 id="修改所有angular依赖至v6"><a href="#修改所有angular依赖至v6" class="headerlink" title="修改所有angular依赖至v6"></a>修改所有angular依赖至v6</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@angular-devkit/build-angular"</span>: <span class="string">"~0.6.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/animations"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/cdk"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/cli"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/common"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/compiler"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/compiler-cli"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/core"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/forms"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/http"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/material"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/platform-browser"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/platform-browser-dynamic"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/router"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"rxjs"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"rxjs-compat"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"tsickle"</span>: <span class="string">"0.27.5"</span>,</span><br><span class="line">    <span class="attr">"tslib"</span>: <span class="string">"1.9.0"</span>,</span><br><span class="line">    <span class="attr">"typescript"</span>: <span class="string">"2.7.2"</span>,</span><br><span class="line">    <span class="attr">"zone.js"</span>: <span class="string">"~0.8.26"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重装-node-modules"><a href="#重装-node-modules" class="headerlink" title="重装 node_modules"></a>重装 <code>node_modules</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf node_modules</span><br><span class="line">yarn install</span><br></pre></td></tr></table></figure><h2 id="删除-angular-cli-json，添加-angular-json"><a href="#删除-angular-cli-json，添加-angular-json" class="headerlink" title="删除.angular-cli.json，添加.angular.json"></a>删除<code>.angular-cli.json</code>，添加<code>.angular.json</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng update @angular/cli --migrate-only --from=1.7.4</span><br></pre></td></tr></table></figure><h2 id="Finished"><a href="#Finished" class="headerlink" title="Finished"></a>Finished</h2><p>大功告成</p><h2 id="新特性"><a href="#新特性" class="headerlink" title="新特性"></a>新特性</h2><ol><li><a href="https://juejin.im/post/5aeebbce6fb9a07aa213406e" target="_blank" rel="noopener">angular</a></li></ol><h2 id="break-change"><a href="#break-change" class="headerlink" title="break change"></a>break change</h2><ul><li><a href="https://github.com/ReactiveX/rxjs/blob/master/MIGRATION.md" target="_blank" rel="noopener">rxjs v6</a><ul><li>链式操作改为<code>pipe</code></li></ul></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// before</span></span><br><span class="line">source</span><br><span class="line"> .map(<span class="function"><span class="params">x</span> =&gt;</span> x + x)</span><br><span class="line"> .mergeMap(<span class="function"><span class="params">n</span> =&gt;</span> of(n + <span class="number">1</span>, n + <span class="number">2</span>)</span><br><span class="line">   .filter(<span class="function"><span class="params">x</span> =&gt;</span> x % <span class="number">1</span> == <span class="number">0</span>)</span><br><span class="line">   .scan(<span class="function">(<span class="params">acc, x</span>) =&gt;</span> acc + x, <span class="number">0</span>)</span><br><span class="line"> )</span><br><span class="line"> .catch(<span class="function"><span class="params">err</span> =&gt;</span> of(<span class="string">'error found'</span>))</span><br><span class="line"> .subscribe(printResult);</span><br><span class="line"></span><br><span class="line"><span class="comment">// now</span></span><br><span class="line">source.pipe(</span><br><span class="line"> map(<span class="function"><span class="params">x</span> =&gt;</span> x + x),</span><br><span class="line"> mergeMap(<span class="function"><span class="params">n</span> =&gt;</span> of(n + <span class="number">1</span>, n + <span class="number">2</span>).pipe(</span><br><span class="line">   filter(<span class="function"><span class="params">x</span> =&gt;</span> x % <span class="number">1</span> == <span class="number">0</span>),</span><br><span class="line">   scan(<span class="function">(<span class="params">acc, x</span>) =&gt;</span> acc + x, <span class="number">0</span>),</span><br><span class="line"> )),</span><br><span class="line"> catchError(<span class="function"><span class="params">err</span> =&gt;</span> of(<span class="string">'error found'</span>)),</span><br><span class="line">).subscribe(printResult);</span><br></pre></td></tr></table></figure><ul><li>操作符导入路径</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Observable, Subject, asapScheduler, pipe, of, <span class="keyword">from</span>, interval, merge, fromEvent &#125; <span class="keyword">from</span> <span class="string">'rxjs'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map, filter, scan &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; webSocket &#125; <span class="keyword">from</span> <span class="string">'rxjs/webSocket'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ajax &#125; <span class="keyword">from</span> <span class="string">'rxjs/ajax'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TestScheduler &#125; <span class="keyword">from</span> <span class="string">'rxjs/testing'</span>;</span><br></pre></td></tr></table></figure><ul><li>部分操作符重命名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">do -&gt; tap</span><br><span class="line">catch -&gt; catchError</span><br><span class="line">switch -&gt; switchAll</span><br><span class="line">finally -&gt; finalize</span><br></pre></td></tr></table></figure><ul><li>部分操作符在v7版将废弃</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mergeMap()</span><br><span class="line">mergeMapTo()</span><br><span class="line">concatMap()</span><br><span class="line">concatMapTo()</span><br><span class="line">switchMap</span><br><span class="line">switchMapTo()</span><br><span class="line">exhaustMap()</span><br><span class="line">forkJoin()</span><br><span class="line">zip()</span><br><span class="line">combineLatest()</span><br><span class="line">fromEvent()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装v8版node-lts&quot;&gt;&lt;a href=&quot;#安装v8版node-lts&quot; class=&quot;headerlink&quot; title=&quot;安装v8版node lts&quot;&gt;&lt;/a&gt;安装v8版node lts&lt;/h2&gt;&lt;figure class=&quot;highlight bash
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="upgrade" scheme="blog.lovesora.pro/tags/upgrade/"/>
    
  </entry>
  
  <entry>
    <title>github pages tips</title>
    <link href="blog.lovesora.pro/2018/05/28/open-source/github/git-page/"/>
    <id>blog.lovesora.pro/2018/05/28/open-source/github/git-page/</id>
    <published>2018-05-28T02:08:11.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><ul><li><p>settings -&gt; github pages<br><img src="/assets/images/github/pages.png" alt="github pages"></p></li><li><p>设置一条CNAME的域名解析记录值为 <code>xxx.github.io</code><br><img src="/assets/images/github/dns.png" alt="dns"></p></li><li><p>在项目根路径中添加文件 <code>CNAME</code>, 添加一行记录，不然每次git提交都会重置GitHub pages域名配置</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog.lovesora.pro</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;自定义域名&quot;&gt;&lt;a href=&quot;#自定义域名&quot; class=&quot;headerlink&quot; title=&quot;自定义域名&quot;&gt;&lt;/a&gt;自定义域名&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;settings -&amp;gt; github pages&lt;br&gt;&lt;img src=&quot;/assets/
      
    
    </summary>
    
    
    
      <category term="github" scheme="blog.lovesora.pro/tags/github/"/>
    
      <category term="pageg" scheme="blog.lovesora.pro/tags/pageg/"/>
    
  </entry>
  
  <entry>
    <title>angular疑难杂症</title>
    <link href="blog.lovesora.pro/2018/05/28/fe/angular/%E6%9D%82%E6%96%87/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    <id>blog.lovesora.pro/2018/05/28/fe/angular/%E6%9D%82%E6%96%87/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/</id>
    <published>2018-05-28T00:07:03.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="执行-ng-config-xxx-后-ng-xxx-命令报错-重装-angular-cli仍然报错"><a href="#执行-ng-config-xxx-后-ng-xxx-命令报错-重装-angular-cli仍然报错" class="headerlink" title="执行 ng config xxx 后 ng xxx 命令报错 重装@angular/cli仍然报错"></a>执行 <code>ng config xxx</code> 后 <code>ng xxx</code> 命令报错 重装<code>@angular/cli</code>仍然报错</h2><p>报错信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Workspace needs to be loaded before it is used.</span><br><span class="line">Error: Workspace needs to be loaded before it is used.</span><br><span class="line">    at Workspace._assertLoaded (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/workspace/workspace.js:59:19)</span><br><span class="line">    at Workspace._getTool (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/workspace/workspace.js:145:14)</span><br><span class="line">    at Workspace.getCli (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/node_modules/@angular-devkit/core/src/workspace/workspace.js:127:21)</span><br><span class="line">    at Object.getDefaultSchematicCollection (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/utilities/config.js:209:32)</span><br><span class="line">    at NewCommand.parseCollectionName (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/commands/new.js:88:76)</span><br><span class="line">    at NewCommand.initialize (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/commands/new.js:46:37)</span><br><span class="line">    at Object.&lt;anonymous&gt; (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/models/<span class="built_in">command</span>-runner.js:87:23)</span><br><span class="line">    at Generator.next (&lt;anonymous&gt;)</span><br><span class="line">    at fulfilled (/usr/<span class="built_in">local</span>/lib/node_modules/@angular/cli/models/<span class="built_in">command</span>-runner.js:4:58)</span><br><span class="line">    at &lt;anonymous&gt;</span><br></pre></td></tr></table></figure><p>解决方案</p><p>删除<code>angular-config.json</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm ~/.angular-config.json</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;执行-ng-config-xxx-后-ng-xxx-命令报错-重装-angular-cli仍然报错&quot;&gt;&lt;a href=&quot;#执行-ng-config-xxx-后-ng-xxx-命令报错-重装-angular-cli仍然报错&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title>angular 入门系列 - 环境配置</title>
    <link href="blog.lovesora.pro/2018/05/27/fe/angular/%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>blog.lovesora.pro/2018/05/27/fe/angular/%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2018-05-27T10:48:01.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Step-1-安装node"><a href="#Step-1-安装node" class="headerlink" title="Step 1. 安装node"></a>Step 1. 安装node</h2><blockquote><p>建议使用<a href="https://github.com/creationix/nvm#installation" target="_blank" rel="noopener">nvm</a>安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure><h2 id="Step-2-使用n安装lts版nodejs"><a href="#Step-2-使用n安装lts版nodejs" class="headerlink" title="Step 2. 使用n安装lts版nodejs"></a>Step 2. 使用n安装lts版nodejs</h2><p>node版本管理神器 <code>n</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要roo权限</span></span><br><span class="line">sudo npm i -g n</span><br><span class="line">sudo n lts</span><br></pre></td></tr></table></figure><h2 id="Step-3-安装-yarn"><a href="#Step-3-安装-yarn" class="headerlink" title="Step 3. 安装 yarn"></a>Step 3. 安装 <code>yarn</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g yarn</span><br></pre></td></tr></table></figure><h2 id="Step-4-安装-angular-cli"><a href="#Step-4-安装-angular-cli" class="headerlink" title="Step 4. 安装 @angular/cli"></a>Step 4. 安装 <code>@angular/cli</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g @angular/cli@6.0.0</span><br></pre></td></tr></table></figure><h2 id="Step-5-创建angular项目"><a href="#Step-5-创建angular项目" class="headerlink" title="Step 5. 创建angular项目"></a>Step 5. 创建angular项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加css预处理器scss [angular cli css preprocessor](https://github.com/angular/angular-cli/wiki/stories-css-preprocessors)</span></span><br><span class="line">ng new angular6-demo --style=scss</span><br></pre></td></tr></table></figure><h2 id="Step-6-运行angular"><a href="#Step-6-运行angular" class="headerlink" title="Step 6. 运行angular"></a>Step 6. 运行angular</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> angular6-demo</span><br><span class="line">yarn start</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Step-1-安装node&quot;&gt;&lt;a href=&quot;#Step-1-安装node&quot; class=&quot;headerlink&quot; title=&quot;Step 1. 安装node&quot;&gt;&lt;/a&gt;Step 1. 安装node&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;建议使用&lt;a href
      
    
    </summary>
    
    
    
      <category term="angular" scheme="blog.lovesora.pro/tags/angular/"/>
    
      <category term="beginner" scheme="blog.lovesora.pro/tags/beginner/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 配置</title>
    <link href="blog.lovesora.pro/2018/05/26/devops/nginx/config/"/>
    <id>blog.lovesora.pro/2018/05/26/devops/nginx/config/</id>
    <published>2018-05-26T23:23:13.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><p>配置文件: <strong>/usr/local/etc/nginx/nginx.conf</strong></p><ul><li>将 <strong>http</strong> 部分修改成下面的配置</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">  <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">log_format</span>    main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">  <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">  <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">access_log</span>    /var/log/nginx/access.log  main;    <span class="comment">#日志文件存放位置</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">sendfile</span>      <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">gzip_http_version</span>  <span class="number">1</span>.<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">gzip_disable</span>       <span class="string">"MSIE [1-6]."</span>;</span><br><span class="line">  <span class="attribute">gzip_min_length</span>    <span class="number">512</span>;</span><br><span class="line">  <span class="attribute">gzip_types</span>         text/plain application/x-javascript text/css text/javascript application/javascript application/xml application/json;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">include</span> servers/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果日志文件的路径不存在, 则需要先创建: sudo mkdir -p /var/log/nginx/</p></blockquote><blockquote><p>修改访问权限: sudo chmod -R a+rw /var/log/nginx/</p></blockquote><blockquote><p>如果出现没有权限访问access.log文件, 可手工创建, 并修改权限:</p></blockquote><blockquote><p>touch /var/log/nginx/access.log &amp;&amp; sudo chmod a+rw /var/log/nginx/access.log</p></blockquote><h2 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h2><p>配置文件: <strong>/usr/local/etc/nginx/proxy.conf</strong></p><ul><li>proxy.conf的内容如下:</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">proxy_redirect</span>          <span class="literal">off</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span>        Host <span class="variable">$host</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span>        X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="attribute">client_max_body_size</span>    <span class="number">10m</span>;</span><br><span class="line"><span class="attribute">client_body_buffer_size</span> <span class="number">128k</span>;</span><br><span class="line"><span class="attribute">proxy_connect_timeout</span>   <span class="number">300</span>;</span><br><span class="line"><span class="attribute">proxy_send_timeout</span>      <span class="number">300</span>;</span><br><span class="line"><span class="attribute">proxy_read_timeout</span>      <span class="number">300</span>;</span><br><span class="line"><span class="attribute">proxy_buffer_size</span>       <span class="number">4k</span>;</span><br><span class="line"><span class="attribute">proxy_buffers</span>           <span class="number">4</span> <span class="number">32k</span>;</span><br><span class="line"><span class="attribute">proxy_busy_buffers_size</span> <span class="number">64k</span>;</span><br><span class="line"><span class="attribute">proxy_temp_file_write_size</span> <span class="number">64k</span>;</span><br></pre></td></tr></table></figure><h2 id="配置转发"><a href="#配置转发" class="headerlink" title="配置转发"></a>配置转发</h2><p>配置文件: <strong>/usr/local/etc/nginx/servers/food.conf</strong></p><p><strong>注意</strong>: </p><p>请将配置文件中的 <strong>/root/workspace/project/src</strong> 修改为本地路径</p><p>#测试服务器</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> sandbox &#123;</span><br><span class="line">  <span class="attribute">server</span> sandbox.com:<span class="number">80</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#正式服务器</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> deploy &#123;</span><br><span class="line">  <span class="attribute">server</span> deploy.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span>  localhost <span class="number">127.0.0.1</span>; <span class="comment">#可通过这二个地址访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志文件的存放位置</span></span><br><span class="line">  <span class="attribute">access_log</span>    /var/log/nginx/food-access.log  main;</span><br><span class="line">  <span class="attribute">error_log</span>     /var/log/nginx/food-<span class="literal">error</span>.log;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">index</span> index.html;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> /api &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span>              http://sandbox.com/api;</span><br><span class="line">    <span class="comment"># Host限定</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span>        Host sandbox.com;</span><br><span class="line">    <span class="attribute">include</span> proxy.conf;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> /admin &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span>              http://sandbox.com/admin;</span><br><span class="line">    <span class="comment"># Host限定</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span>        Host sandbox.com;</span><br><span class="line">    <span class="attribute">include</span> proxy.conf;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">root</span>        /root/workspace/project/src;  <span class="comment">#将该地址指向正确的项目路径</span></span><br><span class="line">    <span class="attribute">index</span>       index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> <span class="variable">@badrequest</span> &#123;</span><br><span class="line">    <span class="attribute">default_type</span> <span class="string">"application/json; charset=utf-8"</span>;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$http_x_locale</span> <span class="regexp">~* "^zh")</span> &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">400</span> <span class="string">"&#123;\"error\":&#123;\"code\":96,\"message\":\"请求不正确\"&#125;&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">400</span> <span class="string">"&#123;\"error\":&#123;\"code\":96,\"msg\":\"Bad request\"&#125;&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">location</span> <span class="variable">@versiontooold</span> &#123;</span><br><span class="line">    <span class="attribute">default_type</span> <span class="string">"application/json; charset=utf-8"</span>;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$http_x_locale</span> <span class="regexp">~* "^zh")</span> &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">404</span> <span class="string">"&#123;\"error\":&#123;\"code\":97,\"message\":\"App版本过低，请升级\"&#125;&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">404</span> <span class="string">"&#123;\"error\":&#123;\"code\":97,\"message\":\"App is too old, please upgrade\"&#125;&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">location</span> <span class="variable">@servererror</span> &#123;</span><br><span class="line">    <span class="attribute">default_type</span> <span class="string">"application/json; charset=utf-8"</span>;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$http_x_locale</span> <span class="regexp">~* "^zh")</span> &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">500</span> <span class="string">"&#123;\"error\":&#123;\"code\":98,\"message\":\"系统繁忙，请稍后重试\"&#125;&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">500</span> <span class="string">"&#123;\"error\":&#123;\"code\":98,\"message\":\"Unknown error, please retry later\"&#125;&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">location</span> <span class="variable">@maintenance</span>&#123;</span><br><span class="line">    <span class="attribute">default_type</span> <span class="string">"application/json; charset=utf-8"</span>;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$http_x_locale</span> <span class="regexp">~* "^zh")</span> &#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">503</span> <span class="string">"&#123;\"error\":&#123;\"code\":99,\"message\":\"很抱歉，服务器维护中，请稍后重试\"&#125;&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">503</span> <span class="string">"&#123;\"error\":&#123;\"code\":99,\"message\":\"The server is under maintenance, please retry later\"&#125;&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">400</span> = <span class="variable">@badrequest</span>;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">404</span> = <span class="variable">@versiontooold</span>;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">500</span> = <span class="variable">@servererror</span>;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> = <span class="variable">@maintenance</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="验证配置文件"><a href="#验证配置文件" class="headerlink" title="验证配置文件"></a>验证配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><h1 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><h1 id="重启或重加载配置文件"><a href="#重启或重加载配置文件" class="headerlink" title="重启或重加载配置文件"></a>重启或重加载配置文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装nginx&quot;&gt;&lt;a href=&quot;#安装nginx&quot; class=&quot;headerlink&quot; title=&quot;安装nginx&quot;&gt;&lt;/a&gt;安装nginx&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
    
      <category term="nginx" scheme="blog.lovesora.pro/tags/nginx/"/>
    
      <category term="config" scheme="blog.lovesora.pro/tags/config/"/>
    
  </entry>
  
  <entry>
    <title>hexo FAQ</title>
    <link href="blog.lovesora.pro/2018/05/26/blog/hexo/hexo-faq/"/>
    <id>blog.lovesora.pro/2018/05/26/blog/hexo/hexo-faq/</id>
    <published>2018-05-26T02:11:35.000Z</published>
    <updated>2020-03-23T23:07:27.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-spost中的tag删除后还存在"><a href="#hexo-spost中的tag删除后还存在" class="headerlink" title="hexo spost中的tag删除后还存在"></a><code>hexo s</code>post中的tag删除后还存在</h2><ol><li>停止hexo server</li><li>执行<code>hexo clean</code></li><li>重启server<code>hexo s</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo-spost中的tag删除后还存在&quot;&gt;&lt;a href=&quot;#hexo-spost中的tag删除后还存在&quot; class=&quot;headerlink&quot; title=&quot;hexo spost中的tag删除后还存在&quot;&gt;&lt;/a&gt;&lt;code&gt;hexo s&lt;/code&gt;post
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="blog.lovesora.pro/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="blog.lovesora.pro/2018/05/25/vcs/git/git-cammand/"/>
    <id>blog.lovesora.pro/2018/05/25/vcs/git/git-cammand/</id>
    <published>2018-05-25T22:08:09.000Z</published>
    <updated>2020-03-23T23:07:27.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git检出远程分支"><a href="#git检出远程分支" class="headerlink" title="git检出远程分支"></a>git检出远程分支</h2><p><code>git checkout -b localBranch remote/branchName</code></p><h2 id="回退到制定版本"><a href="#回退到制定版本" class="headerlink" title="回退到制定版本"></a>回退到制定版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> <span class="comment">#查看版本提交日志</span></span><br><span class="line">git reset --hard 61e0e8b94667afe99c8dcd4f954ad69d0d6f49e8</span><br></pre></td></tr></table></figure><h2 id="列出远程tag列表"><a href="#列出远程tag列表" class="headerlink" title="列出远程tag列表"></a>列出远程tag列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-remote --tag</span><br></pre></td></tr></table></figure><h2 id="检出所有远程分支"><a href="#检出所有远程分支" class="headerlink" title="检出所有远程分支"></a>检出所有远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> branch <span class="keyword">in</span> $(git branch --all | grep <span class="string">'^\s*remotes'</span> | egrep --invert-match <span class="string">'(:?HEAD|master)$'</span>); <span class="keyword">do</span></span><br><span class="line">    git branch --track <span class="string">"<span class="variable">$&#123;branch##*/&#125;</span>"</span> <span class="string">"<span class="variable">$branch</span>"</span> 2&gt;/dev/null</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="删除所有远程tag"><a href="#删除所有远程tag" class="headerlink" title="删除所有远程tag"></a>删除所有远程tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xargs -p 可打印出将执行的命令</span></span><br><span class="line">git tag | xargs -n1 git push origin --delete</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git检出远程分支&quot;&gt;&lt;a href=&quot;#git检出远程分支&quot; class=&quot;headerlink&quot; title=&quot;git检出远程分支&quot;&gt;&lt;/a&gt;git检出远程分支&lt;/h2&gt;&lt;p&gt;&lt;code&gt;git checkout -b localBranch remote/b
      
    
    </summary>
    
    
    
      <category term="git" scheme="blog.lovesora.pro/tags/git/"/>
    
      <category term="cli" scheme="blog.lovesora.pro/tags/cli/"/>
    
  </entry>
  
</feed>
